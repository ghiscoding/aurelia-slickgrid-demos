"use strict";(self.webpackChunkaurelia_slickgrid_demo_bs5=self.webpackChunkaurelia_slickgrid_demo_bs5||[]).push([[865],{2865:(e,t,i)=>{i.r(t),i.d(t,{Example15:()=>b});var a={};i.r(a),i.d(a,{default:()=>o,dependencies:()=>s,name:()=>r,register:()=>c,template:()=>l});var n=i(5394);const r="example15",l='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example15.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle" innerhtml.bind="subTitle"></div>\n\n<button class="btn btn-outline-secondary btn-sm btn-icon" data-test="reset-button"\n        click.trigger="clearGridStateFromLocalStorage()">\n  <i class="mdi mdi-close"></i>\n  Clear Grid State from Local Storage &amp; Reset Grid\n</button>\n\n<button class="btn btn-outline-secondary btn-sm btn-icon" data-test="language-button" click.trigger="switchLanguage()">\n  <i class="mdi mdi-translate"></i>\n  Switch Language\n</button>\n<strong>Locale:</strong>\n<span style="font-style: italic" data-test="selected-locale">\n  ${selectedLanguage + \'.json\'}\n</span>\n\n<aurelia-slickgrid grid-id="grid15"\n                    column-definitions.bind="columnDefinitions"\n                    grid-options.bind="gridOptions"\n                    dataset.bind="dataset"\n                    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)"\n                    on-grid-state-changed.trigger="gridStateChanged($event.detail)"\n                    >\n</aurelia-slickgrid>\n',o=l,s=[];let d;function c(e){d||(d=n.K94.define({name:r,template:l,dependencies:s})),e.register(d)}var u=i(8152),m=i(7557),g=i(3492);function h(e,t){return Math.floor(Math.random()*(t-e+1)+e)}i(6757);const p="gridState";class b{constructor(e=(0,m.hd)(u.TH)){this.i18n=e,this.title="Example 15: Grid State & Presets using Local Storage",this.subTitle='\n  Grid State & Preset (<a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/grid-state-preset" target="_blank">Wiki docs</a>)\n  <br/>\n  <ul class="small">\n    <li>Uses Local Storage to persist the Grid State and uses Grid Options "presets" to put the grid back to it\'s previous state</li>\n    <ul>\n       <li>to demo this, simply change any columns (position reorder, visibility, size, filter, sort), then refresh your browser with (F5)</li>\n    </ul>\n    <li>Local Storage is just one option, you can use whichever is more convenient for you (Local Storage, Session Storage, DB, ...)</li>\n  </ul>\n',this.columnDefinitions=[],this.dataset=[];const t=JSON.parse(localStorage[p]||null);this.defineGrid(t),this.i18n.setLocale("en"),this.selectedLanguage="en"}attached(){this.dataset=this.getData(500)}detaching(){this.saveCurrentGridState()}aureliaGridReady(e){this.aureliaGrid=e}clearGridStateFromLocalStorage(){this.aureliaGrid.gridService.resetGrid(this.columnDefinitions),this.aureliaGrid.paginationService.changeItemPerPage(25),setTimeout((()=>localStorage[p]=null))}defineGrid(e){const t=[];for(let e=0;e<500;e++)t.push({value:e,label:e});this.columnDefinitions=[{id:"title",name:"Title",field:"title",nameKey:"TITLE",filterable:!0,sortable:!0,type:g.PUO.string,minWidth:45,width:100,filter:{model:g.CuW.compoundInput}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80,width:100,type:g.PUO.string,filter:{model:g.CuW.input}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:g.PUO.number,exportCsvForceToKeepAsString:!0,minWidth:55,width:100,nameKey:"DURATION",filterable:!0,filter:{collection:t,model:g.CuW.multipleSelect,filterOptions:{maxHeight:250,width:175}}},{id:"complete",name:"% Complete",field:"percentComplete",nameKey:"PERCENT_COMPLETE",minWidth:70,type:g.PUO.number,sortable:!0,width:100,formatter:g._tQ.percentCompleteBar,filterable:!0,filter:{model:g.CuW.slider,operator:">"}},{id:"start",name:"Start",field:"start",nameKey:"START",formatter:g._tQ.dateIso,sortable:!0,minWidth:75,exportWithFormatter:!0,width:100,type:g.PUO.date,filterable:!0,filter:{model:g.CuW.compoundDate}},{id:"completed",field:"completed",nameKey:"COMPLETED",minWidth:85,maxWidth:85,formatter:g._tQ.checkmarkMaterial,width:100,type:g.PUO.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:g.CuW.singleSelect}}],this.gridOptions={autoResize:{container:"#demo-container",rightPadding:10},enableCheckboxSelector:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.i18n,columnPicker:{hideForceFitButton:!0},gridMenu:{hideForceFitButton:!0,hideClearFrozenColumnsCommand:!1},headerMenu:{hideFreezeColumnsCommand:!1},enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,30,40,50,75,100],pageSize:25}},e&&(this.gridOptions.presets=e)}getData(e){const t=[];for(let i=0;i<e;i++){const e=Math.round(100*Math.random()),a=h(2e3,2025),n=h(10,25),r=h(1,12),l=r<10?`0${r}`:r,o=h(10,28),s=h(0,100),d=h(10,23),c=h(10,59);t[i]={id:i,title:"Task "+i,description:i%5?"desc "+i:null,duration:e,percentComplete:s,percentCompleteNumber:s,start:new Date(a,r,o),usDateShort:`${r}/${o}/${n}`,utcDate:`${a}-${l}-${o}T${d}:${c}:${c}Z`,completed:i%3==0}}return t}gridStateChanged(e){console.log("Client sample, Grid State changed:: ",e),localStorage[p]=JSON.stringify(e.gridState)}saveCurrentGridState(){const e=this.aureliaGrid.gridStateService.getCurrentGridState();console.log("Client sample, current Grid State:: ",e),localStorage[p]=JSON.stringify(e)}async switchLanguage(){const e="en"===this.selectedLanguage?"fr":"en";await this.i18n.setLocale(e),this.selectedLanguage=e}useDefaultPresets(){return{columns:[{columnId:"description",width:170},{columnId:"title",width:55},{columnId:"duration"},{columnId:"complete"},{columnId:"start"},{columnId:"usDateShort"},{columnId:"utcDate"}],filters:[{columnId:"duration",searchTerms:[2,22,44]},{columnId:"usDateShort",operator:"<",searchTerms:["4/20/25"]}],sorters:[{columnId:"duration",direction:"DESC"},{columnId:"complete",direction:"ASC"}]}}}n.K94.define(a,b)}}]);