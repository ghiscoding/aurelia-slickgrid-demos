"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[3668],{3668:(e,t,i)=>{i.r(t),i.d(t,{Example45:()=>y});var n={};i.r(n),i.d(n,{bindables:()=>d,default:()=>o,dependencies:()=>l,name:()=>s,register:()=>h,template:()=>r});var a=i(5394);const s="example45",r='<div id="demo-container" class="container-fluid">\n  <h2>\n    Example 45: Row Detail with inner Grid\n    <span class="float-end">\n      <a\n        style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/slickgrid-universal/blob/master/demos/aurelia/src/examples/slickgrid/example44.ts"\n      >\n        <span class="mdi mdi-link-variant"></span> code\n      </a>\n    </span>\n    <button\n      class="ms-2 btn btn-outline-secondary btn-sm btn-icon"\n      type="button"\n      data-test="toggle-subtitle"\n      click.trigger="toggleSubTitle()"\n    >\n      <span class="mdi mdi-information-outline" title="Toggle example sub-title details"></span>\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="toggleDarkMode()" data-test="toggle-dark-mode">\n      <span class="mdi mdi-theme-light-dark"></span>\n      <span>Toggle Dark Mode</span>\n    </button>\n  </h2>\n\n  <div class="subtitle">\n    Add functionality to show extra information with a Row Detail View, (<a\n      href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/row-detail"\n      target="_blank"\n      >Wiki docs</a\n    >), we\'ll use an inner grid inside our Row Detail Component. Note that because SlickGrid uses Virtual Scroll, the rows and row details\n    are often be re-rendered (when row is out of viewport range) and this means unmounting Row Detail Component which indirectly mean that\n    all component states (dynamic elements, forms, ...) will be disposed as well, however you can use Grid State/Presets to reapply previous\n    state whenever the row detail gets re-rendered when back to viewport.\n  </div>\n\n  <div class="row">\n    <div class="col-sm-10">\n      <button class="btn btn-outline-secondary btn-sm btn-icon ms-1" data-test="collapse-all-btn" click.trigger="closeAllRowDetail()">\n        Close all Row Details\n      </button>\n      <button class="btn btn-outline-secondary btn-sm btn-icon mx-1" data-test="redraw-all-btn" click.trigger="redrawAllRowDetail()">\n        Force redraw all Row Details\n      </button>\n\n      <span class="d-inline-flex gap-4px">\n        <label for="detailViewRowCount">Detail View Rows Shown: </label>\n        <input\n          id="detailViewRowCount"\n          data-test="detail-view-row-count"\n          type="number"\n          style="height: 26px; width: 40px"\n          value.bind="detailViewRowCount"\n        />\n        <button\n          class="btn btn-outline-secondary btn-xs btn-icon"\n          style="height: 26px"\n          data-test="set-count-btn"\n          click.trigger="changeDetailViewRowCount()"\n        >\n          Set\n        </button>\n        <label for="serverdelay" class="ms-2">Server Delay: </label>\n        <input\n          id="serverdelay"\n          value.bind="serverWaitDelay"\n          type="number"\n          data-test="server-delay"\n          style="height: 26px; width: 55px"\n          title="input a fake timer delay to simulate slow server response"\n        />\n        <label class="checkbox-inline control-label ms-2" for="useInnerGridStatePresets">\n          <input\n            type="checkbox"\n            id="useInnerGridStatePresets"\n            data-test="use-inner-grid-state-presets"\n            checked.bind="isUsingInnerGridStatePresets"\n            click.trigger="changeUsingInnerGridStatePresets()"\n          />\n          <span\n            title="should we use Grid State/Presets to keep the inner grid state whenever Row Details are out and back to viewport and re-rendered"\n          >\n            Use Inner Grid State/Presets\n          </span>\n        </label>\n\n        <label class="checkbox-inline control-label ms-2" for="useResizeAutoHeight">\n          <input\n            type="checkbox"\n            id="useResizeAutoHeight"\n            data-test="use-auto-height"\n            checked.bind="isUsingAutoHeight"\n            click.trigger="changeUsingResizerAutoHeight()"\n          />\n          Use <code>autoResize.autoHeight</code>\n        </label>\n      </span>\n    </div>\n  </div>\n\n  <aurelia-slickgrid\n    grid-id="grid45"\n    columns.bind="columnDefinitions"\n    options.bind="gridOptions"\n    dataset.bind="dataset"\n    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)"\n  >\n  </aurelia-slickgrid>\n</div>\n',o=r,l=[],d={};let c;function h(e){c||(c=a.K9.define({name:s,template:r,dependencies:l,bindables:d})),e.register(c)}var u=i(338),g=i(5941),p=i(9957),m=i(812),b=(i(6757),function(e,t,i,n,a,s){function r(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var o,l=n.kind,d="getter"===l?"get":"setter"===l?"set":"value",c=!t&&e?n.static?e:e.prototype:null,h=t||(c?Object.getOwnPropertyDescriptor(c,n.name):{}),u=!1,g=i.length-1;g>=0;g--){var p={};for(var m in n)p[m]="access"===m?{}:n[m];for(var m in n.access)p.access[m]=n.access[m];p.addInitializer=function(e){if(u)throw new TypeError("Cannot add initializers after decoration has completed");s.push(r(e||null))};var b=(0,i[g])("accessor"===l?{get:h.get,set:h.set}:h[d],p);if("accessor"===l){if(void 0===b)continue;if(null===b||"object"!=typeof b)throw new TypeError("Object expected");(o=r(b.get))&&(h.get=o),(o=r(b.set))&&(h.set=o),(o=r(b.init))&&a.unshift(o)}else(o=r(b))&&("field"===l?a.unshift(o):h[d]=o)}c&&Object.defineProperty(c,n.name,h),u=!0}),w=function(e,t,i){for(var n=arguments.length>2,a=0;a<t.length;a++)i=n?t[a].call(e,i):t[a].call(e);return n?i:void 0};let y=(()=>{let e,t,i,s,r=[(0,a.EM)(n)],o=[],l=[],d=[],c=[],h=[];return t=class{get rowDetailInstance(){return this.aureliaGrid?.extensionService.getExtensionInstanceByName(g.$fu.rowDetailView)}aureliaGridReady(e){this.aureliaGrid=e}constructor(){this._darkMode=!1,this.detailViewRowCount=w(this,l,9),this.serverWaitDelay=(w(this,d),w(this,c,250)),this.columnDefinitions=(w(this,h),[]),this.dataset=[],this.isUsingAutoHeight=!1,this.isUsingInnerGridStatePresets=!1,this.hideSubTitle=!1,this.defineGrid()}attached(){this.dataset=this.getData(995)}defineGrid(){this.columnDefinitions=[{id:"companyId",name:"ID",field:"companyId",cssClass:"text-end",minWidth:50,maxWidth:50,filterable:!0,sortable:!0,type:"number"},{id:"companyName",name:"Company Name",field:"companyName",width:90,filterable:!0,sortable:!0},{id:"streetAddress",name:"Street Address",field:"streetAddress",minWidth:120,filterable:!0},{id:"city",name:"City",field:"city",minWidth:120,filterable:!0},{id:"zipCode",name:"Zip Code",field:"zipCode",minWidth:120,filterable:!0},{id:"country",name:"Country",field:"country",minWidth:120,filterable:!0}],this.gridOptions={autoResize:{container:"#demo-container",autoHeight:this.isUsingAutoHeight,rightPadding:20,bottomPadding:20},enableFiltering:!0,enableRowDetailView:!0,rowTopOffsetRenderType:"top",darkMode:this._darkMode,rowHeight:33,rowDetailView:{process:e=>this.simulateServerAsyncCall(e),loadOnce:!1,useRowClick:!1,panelRows:this.detailViewRowCount,parentRef:this,preloadViewModel:p.p,viewModel:m.o}}}getData(e){const t=[];for(let i=0;i<e;i++)t[i]={id:i,companyId:i,companyName:u.a.company.name(),city:u.a.location.city(),streetAddress:u.a.location.streetAddress(),zipCode:u.a.location.zipCode("######"),country:u.a.location.country(),orderData:[],isUsingInnerGridStatePresets:!1};return t}changeDetailViewRowCount(){if(this.aureliaGrid?.extensionService){const e=this.rowDetailInstance.getOptions();e?.panelRows&&(e.panelRows=this.detailViewRowCount,this.rowDetailInstance.setOptions(e))}}changeUsingInnerGridStatePresets(){return this.isUsingInnerGridStatePresets=!this.isUsingInnerGridStatePresets,this.closeAllRowDetail(),!0}changeUsingResizerAutoHeight(){return this.isUsingAutoHeight=!this.isUsingAutoHeight,this.aureliaGrid.slickGrid?.setOptions({autoResize:{...this.gridOptions.autoResize,autoHeight:this.isUsingAutoHeight}}),this.aureliaGrid.resizerService.resizeGrid(),!0}closeAllRowDetail(){this.rowDetailInstance?.collapseAll()}redrawAllRowDetail(){this.rowDetailInstance?.redrawAllViewSlots(!0)}simulateServerAsyncCall(e){let t=[];return t=e.id%3?[{orderId:"10261",shipCity:"Rio de Janeiro",freight:3.05,shipName:"Que Delícia"},{orderId:"10267",shipCity:"München",freight:208.58,shipName:"Frankenversand"},{orderId:"10281",shipCity:"Madrid",freight:2.94,shipName:"Romero y tomillo"}]:e.id%4?[{orderId:"10251",shipCity:"Lyon",freight:41.34,shipName:"Victuailles en stock"},{orderId:"10253",shipCity:"Rio de Janeiro",freight:58.17,shipName:"Hanari Carnes"},{orderId:"10256",shipCity:"Resende",freight:13.97,shipName:"Wellington Importadora"}]:e.id%5?[{orderId:"10265",shipCity:"Strasbourg",freight:55.28,shipName:"Blondel père et fils"},{orderId:"10277",shipCity:"Leipzig",freight:125.77,shipName:"Morgenstern Gesundkost"},{orderId:"10280",shipCity:"Luleå",freight:8.98,shipName:"Berglunds snabbköp"},{orderId:"10295",shipCity:"Reims",freight:1.15,shipName:"Vins et alcools Chevalier"}]:e.id%2?[{orderId:"10258",shipCity:"Graz",freight:140.51,shipName:"Ernst Handel"},{orderId:"10270",shipCity:"Oulu",freight:136.54,shipName:"Wartian Herkku"}]:[{orderId:"10255",shipCity:"Genève",freight:148.33,shipName:"Richter Supermarkt"}],new Promise((i=>{window.setTimeout((()=>{const n=e;n.orderData=t,n.isUsingInnerGridStatePresets=this.isUsingInnerGridStatePresets,i(n)}),this.serverWaitDelay)}))}toggleDarkMode(){this._darkMode=!this._darkMode,this.toggleBodyBackground(),this.aureliaGrid.slickGrid?.setOptions({darkMode:this._darkMode}),this.closeAllRowDetail()}toggleBodyBackground(){this._darkMode?(document.querySelector(".panel-wm-content").classList.add("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="dark"):(document.querySelector(".panel-wm-content").classList.remove("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="light")}toggleSubTitle(){this.hideSubTitle=!this.hideSubTitle;const e=this.hideSubTitle?"add":"remove";document.querySelector(".subtitle")?.classList[e]("hidden"),this.aureliaGrid.resizerService.resizeGrid(0)}},y=t,"symbol"==typeof(f="Example45")&&(f=f.description?"[".concat(f.description,"]"):""),Object.defineProperty(y,"name",{configurable:!0,value:k?"".concat(k," ",f):f}),(()=>{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;i=[a._t],s=[a._t],b(null,null,i,{kind:"field",name:"detailViewRowCount",static:!1,private:!1,access:{has:e=>"detailViewRowCount"in e,get:e=>e.detailViewRowCount,set:(e,t)=>{e.detailViewRowCount=t}},metadata:n},l,d),b(null,null,s,{kind:"field",name:"serverWaitDelay",static:!1,private:!1,access:{has:e=>"serverWaitDelay"in e,get:e=>e.serverWaitDelay,set:(e,t)=>{e.serverWaitDelay=t}},metadata:n},c,h),b(null,e={value:t},r,{kind:"class",name:t.name,metadata:n},null,o),t=e.value,n&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),w(t,o)})(),t;var y,f,k})()}}]);