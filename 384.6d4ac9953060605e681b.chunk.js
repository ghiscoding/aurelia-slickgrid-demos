"use strict";(self.webpackChunkaurelia_slickgrid_demo_bs5=self.webpackChunkaurelia_slickgrid_demo_bs5||[]).push([[384],{2975:(e,t,i)=>{i.d(t,{A:()=>l});var a=i(1601),n=i.n(a),s=i(6314),d=i.n(s)()(n());d.push([e.id,".tab-content{padding:10px}",""]);const l=d},5384:(e,t,i)=>{i.r(t),i.d(t,{Example22:()=>j});var a={};i.r(a),i.d(a,{bindables:()=>c,default:()=>r,dependencies:()=>o,name:()=>d,register:()=>h,template:()=>l});var n=i(3680),s=i(2975);const d="example22",l='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example22.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle"\n      innerhtml.bind="subTitle"></div>\n\n<div>\n  <nav>\n    <div class="nav nav-tabs" id="nav-tab" role="tablist">\n      <button\n          class="nav-link active"\n          id="javascript-tab"\n          data-bs-toggle="tab"\n          data-bs-target="#javascript"\n          type="button"\n          role="tab"\n          aria-controls="javascript"\n          aria-selected="true">\n        JavaScript\n      </button>\n      <button\n          class="nav-link"\n          id="fetch-tab"\n          data-bs-toggle="tab"\n          data-bs-target="#fetch"\n          type="button"\n          role="tab"\n          aria-controls="fetch"\n          aria-selected="false"\n          click.trigger="resizeGrid2()">\n        Fetch-Client\n      </button>\n    </div>\n  </nav>\n  <div class="tab-content" id="nav-tabContent">\n    <div class="tab-pane fade show active" id="javascript" role="tabpanel" aria-labelledby="javascript-tab" tabindex="0">\n      <h4>Grid 1 - Load Local Data</h4>\n      <aurelia-slickgrid grid-id="grid1"\n                          column-definitions.bind="columnDefinitions1"\n                          grid-options.bind="gridOptions1"\n                          dataset.bind="dataset1">\n      </aurelia-slickgrid>\n    </div>\n    <div class="tab-pane fade" id="fetch" role="tabpanel" aria-labelledby="fetch-tab" tabindex="0">\n      <h4>Grid 2 - Load a JSON dataset through Fetch-Client</h4>\n      <aurelia-slickgrid grid-id="grid2"\n                          column-definitions.bind="columnDefinitions2"\n                          grid-options.bind="gridOptions2"\n                          dataset.bind="dataset2"\n                          on-aurelia-grid-created.trigger="aureliaGrid2Ready($event.detail)">\n      </aurelia-slickgrid>\n    </div>\n  </div>\n</div>\n',r=l,o=[],c=[];let b;function h(e){b||(b=n.K94.define({name:d,template:l,dependencies:o,bindables:c})),e.register(b)}var m=i(9931),f=i(7557),u=i(1968),p=i(5072),g=i.n(p),v=i(7825),k=i.n(v),G=i(7659),y=i.n(G),D=i(5056),x=i.n(D),C=i(540),z=i.n(C),A=i(1113),M=i.n(A),T={};T.styleTagTransform=M(),T.setAttributes=x(),T.insert=y().bind(null,"head"),T.domAPI=k(),T.insertStyleElement=z(),g()(s.A,T),s.A&&s.A.locals&&s.A.locals,i(6757);class j{constructor(e=(0,f.hd)((0,f.pn)(m.xl))){this.http=e,this.title="Example 22: Grids in Bootstrap Tabs",this.subTitle='This example demonstrate the creation of multiple grids in Bootstrap Tabs\n   <ol>\n    <li>Regular mocked data with javascript</li>\n    <li>Load dataset through Fetch-Client. Also note we need to call a "resizeGrid()" after focusing on this tab</li>\n  </ol>',this.columnDefinitions1=[],this.columnDefinitions2=[],this.dataset1=[],this.dataset2=[],this.defineGrid1(),this.defineGrid2()}aureliaGrid2Ready(e){this.aureliaGrid2=e}async attached(){this.dataset1=this.mockData();const e=await this.http.fetch("assets/data/customers_100.json");this.dataset2=await e.json()}defineGrid1(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,minWidth:100},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,minWidth:100},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0,minWidth:100},{id:"start",name:"Start",field:"start",minWidth:100},{id:"finish",name:"Finish",field:"finish",minWidth:100},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",sortable:!0,minWidth:100}],this.gridOptions1={enableAutoResize:!0,autoResize:{container:"#demo-container",rightPadding:10},enableSorting:!0}}defineGrid2(){this.columnDefinitions2=[{id:"name",name:"Name",field:"name",filterable:!0,sortable:!0},{id:"gender",name:"Gender",field:"gender",filterable:!0,sortable:!0,filter:{model:u.CuW.singleSelect,collection:[{value:"",label:""},{value:"male",label:"male"},{value:"female",label:"female"}]}},{id:"company",name:"Company",field:"company",filterable:!0,sortable:!0}],this.gridOptions2={enableAutoResize:!0,autoResize:{container:"#demo-container",rightPadding:10},enableFiltering:!0,enableSorting:!0}}mockData(){const e=[];for(let t=0;t<1e3;t++){const i=2e3+Math.floor(10*Math.random()),a=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),s=Math.round(100*Math.random());e[t]={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:s,start:`${a}/${n}/${i}`,finish:`${a}/${n}/${i}`,effortDriven:t%5==0}}return e}resizeGrid2(){this.aureliaGrid2.resizerService.resizeGrid(10)}}n.K94.define(a,j)}}]);