(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"3z3R":function(e,t,i){(e.exports=i("I1BE")(!1)).push([e.i,".slick-row .slick-cell.frozen:last-child,.slick-headerrow-column.frozen:last-child,.slick-footerrow-column.frozen:last-child{border-right:1px solid #969696 !important}.slick-pane-bottom{border-top:1px solid #969696 !important}\n",""])},dmFH:function(e,t,i){var n=i("eGy5");"string"==typeof n&&(n=[[e.i,n,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};i("aET+")(n,r);n.locals&&(e.exports=n.locals)},eGy5:function(e,t,i){(e.exports=i("I1BE")(!1)).push([e.i,".alert{padding:8px;margin-bottom:10px}.col-sm-1{max-width:70px}\n",""])},"examples/slickgrid/example1":function(e,t,i){"use strict";i.r(t),i.d(t,"Example1",(function(){return r}));var n=function(){return(n=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var r in t=arguments[i])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)},r=function(){function e(){this.title="Example 1: Basic Grid",this.subTitle='Simple Grids with Fixed Sizes (800 x 225) using "grid-height" &amp; "grid-width"',this.defineGrids()}return e.prototype.attached=function(){this.dataset1=this.mockData(995),this.dataset2=this.mockData(995)},e.prototype.defineGrids=function(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,minWidth:100},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,minWidth:100},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0,minWidth:100},{id:"start",name:"Start",field:"start",minWidth:100},{id:"finish",name:"Finish",field:"finish",minWidth:100},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",sortable:!0,minWidth:100}],this.gridOptions1={enableAutoResize:!1,enableSorting:!0},this.columnDefinitions2=this.columnDefinitions1,this.gridOptions2=n(n({},this.gridOptions1),{enablePagination:!0,pagination:{pageSizes:[5,10,20,25,50],pageSize:5}})},e.prototype.mockData=function(e){for(var t=[],i=0;i<e;i++){var n=2e3+Math.floor(10*Math.random()),r=Math.floor(11*Math.random()),a=Math.floor(29*Math.random()),o=Math.round(100*Math.random());t[i]={id:i,title:"Task "+i,duration:Math.round(100*Math.random())+"",percentComplete:o,start:r+"/"+a+"/"+n,finish:r+"/"+a+"/"+n,effortDriven:i%5==0}}return t},e}()},"examples/slickgrid/example1.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle"\n       innerhtml.bind="subTitle"></div>\n\n  <h3>Grid 1</h3>\n  <aurelia-slickgrid grid-id="grid1"\n                     column-definitions.bind="columnDefinitions1"\n                     grid-options.bind="gridOptions1"\n                     dataset.bind="dataset1"\n                     grid-height="225"\n                     grid-width="800">\n  </aurelia-slickgrid>\n\n  <hr />\n\n  <h3>Grid 2 <small>(with local Pagination)</small></h3>\n  <aurelia-slickgrid grid-id="grid2"\n                     column-definitions.bind="columnDefinitions2"\n                     grid-options.bind="gridOptions2"\n                     dataset.bind="dataset2"\n                     grid-height="225"\n                     grid-width="800">\n  </aurelia-slickgrid>\n</template>\n'},"examples/slickgrid/example10":function(e,t,i){"use strict";i.r(t),i.d(t,"Example2",(function(){return l}));var n=i("aurelia-framework"),r=i("aurelia-slickgrid"),a=(i("dmFH"),function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o}),o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(){this.title="Example 10: Multiple Grids with Row Selection",this.subTitle='\n    Row selection, single or multi-select (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Row-Selection" target="_blank">Wiki docs</a>).\n    <ul>\n      <li>Single Select, you can click on any cell to make the row active</li>\n      <li>Multiple Selections, you need to specifically click on the checkbox to make 1 or more selections</li>\n      <li>NOTE: Any Row Selection(s) will be reset when using Pagination and changing Page (you will need to set it back manually if you want it back)</li>\n    </ul>\n  ',this.isGrid2WithPagination=!0,this.selectedTitle="",this.defineGrids()}return e.prototype.attached=function(){this.dataset1=this.prepareData(495),this.dataset2=this.prepareData(525)},e.prototype.aureliaGrid1Ready=function(e){this.aureliaGrid1=e},e.prototype.aureliaGrid2Ready=function(e){this.aureliaGrid2=e},e.prototype.defineGrids=function(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,type:r.FieldType.string,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:r.FieldType.number,filterable:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:r.Formatters.percentCompleteBar,type:r.FieldType.number,filterable:!0,sortable:!0},{id:"start",name:"Start",field:"start",formatter:r.Formatters.dateIso,exportWithFormatter:!0,type:r.FieldType.date,filterable:!0,sortable:!0,filter:{model:r.Filters.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:r.Formatters.dateIso,exportWithFormatter:!0,type:r.FieldType.date,filterable:!0,sortable:!0,filter:{model:r.Filters.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:r.Formatters.checkmark,type:r.FieldType.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:r.Filters.singleSelect}}],this.columnDefinitions2=[{id:"title",name:"Title",field:"title",sortable:!0,type:r.FieldType.string,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:r.FieldType.number,filterable:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:r.Formatters.percentCompleteBar,type:r.FieldType.number,filterable:!0,sortable:!0},{id:"start",name:"Start",field:"start",formatter:r.Formatters.dateIso,exportWithFormatter:!0,type:r.FieldType.date,filterable:!0,sortable:!0,filter:{model:r.Filters.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:r.Formatters.dateIso,exportWithFormatter:!0,type:r.FieldType.date,filterable:!0,sortable:!0,filter:{model:r.Filters.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:r.Formatters.checkmark,type:r.FieldType.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:r.Filters.singleSelect}}],this.gridOptions1={enableAutoResize:!1,enableCellNavigation:!0,enableRowSelection:!0,enableCheckboxSelector:!0,enableFiltering:!0,checkboxSelector:{hideSelectAllCheckbox:!0},multiSelect:!1,rowSelectionOptions:{selectActiveRow:!0},columnPicker:{hideForceFitButton:!0},gridMenu:{hideForceFitButton:!0},enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,50,75,100],pageSize:5},presets:{pagination:{pageNumber:2,pageSize:5}}},this.gridOptions2={enableAutoResize:!1,enableCellNavigation:!0,enableFiltering:!0,checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},rowSelectionOptions:{selectActiveRow:!1},enableCheckboxSelector:!0,enableRowSelection:!0,enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,50,75,100],pageSize:5},presets:{rowSelection:{dataContextIds:[3,12,13,522]}}}},e.prototype.prepareData=function(e){for(var t=[],i=0;i<e;i++){var n=2e3+Math.floor(10*Math.random()),r=Math.floor(11*Math.random()),a=Math.floor(29*Math.random()),o=Math.round(100*Math.random());t[i]={id:i,title:"Task "+i,duration:Math.round(100*Math.random())+"",percentComplete:o,percentCompleteNumber:o,start:new Date(n,r,a),finish:new Date(n,r+1,a),effortDriven:i%5==0}}return t},e.prototype.goToGrid1FirstPage=function(){this.aureliaGrid1.paginationService.goToFirstPage()},e.prototype.goToGrid1LastPage=function(){this.aureliaGrid1.paginationService.goToLastPage()},e.prototype.goToGrid2FirstPage=function(){this.aureliaGrid2.paginationService.goToFirstPage()},e.prototype.goToGrid2LastPage=function(){this.aureliaGrid2.paginationService.goToLastPage()},e.prototype.grid1StateChanged=function(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change)},e.prototype.grid2StateChanged=function(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change),e.gridState.rowSelection&&(this.selectedGrid2IDs=e.gridState.rowSelection.filteredDataContextIds||[],this.selectedGrid2IDs=this.selectedGrid2IDs.sort((function(e,t){return e-t})),this.selectedTitles=this.selectedGrid2IDs.map((function(e){return"Task "+e})))},e.prototype.isGrid2WithPaginationChanged=function(){this.aureliaGrid2.paginationService.togglePaginationVisibility(this.isGrid2WithPagination)},e.prototype.onGrid1SelectedRowsChanged=function(e,t){var i=t&&t.grid;Array.isArray(t.rows)&&(this.selectedTitle=t.rows.map((function(e){var t=i.getDataItem(e);return t&&t.title||""})))},a([Object(n.l)(),o("design:type",Object)],e.prototype,"isGrid2WithPagination",void 0),e=a([Object(n.k)(),o("design:paramtypes",[])],e)}()},"examples/slickgrid/example10.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle"\n       innerhtml.bind="subTitle"></div>\n\n  <div class="row">\n    <div class="col-sm-4" style="max-width: 170px;">\n      Pagination\n      <button class="btn btn-outline-secondary btn-xs" data-test="goto-first-page"\n              click.delegate="goToGrid1FirstPage()">\n        <i class="fa fa-caret-left fa-lg"></i>\n      </button>\n      <button class="btn btn-outline-secondary btn-xs" data-test="goto-last-page" click.delegate="goToGrid1LastPage()">\n        <i class="fa fa-caret-right fa-lg"></i>\n      </button>\n    </div>\n    <div class="col-sm-8">\n      <div class="alert alert-success">\n        <strong>(single select) Selected Row:</strong>\n        <span innerhtml.bind="selectedTitle"\n              data-test="grid1-selections"></span>\n      </div>\n    </div>\n  </div>\n\n  <aurelia-slickgrid grid-id="grid1"\n                     column-definitions.bind="columnDefinitions1"\n                     grid-options.bind="gridOptions1"\n                     dataset.bind="dataset1"\n                     grid-height="225"\n                     grid-width="800"\n                     asg-on-aurelia-grid-created.delegate="aureliaGrid1Ready($event.detail)"\n                     asg-on-grid-state-changed.delegate="grid1StateChanged($event.detail)"\n                     sg-on-selected-rows-changed.delegate="onGrid1SelectedRowsChanged($event.detail.eventData, $event.detail.args)">\n  </aurelia-slickgrid>\n\n  <hr>\n\n  <div class="row">\n    <div class="col-sm-4 col-md-3" style="max-width: 185px;">\n      <label for="enableGrid2Pagination">\n        Pagination:\n        <input type="checkbox" id="enableGrid2Pagination"\n               checked.bind="isGrid2WithPagination"\n               data-test="toggle-pagination-grid2" />\n      </label>\n      <span style="margin-left: 5px" *ngIf="isGrid2WithPagination">\n        <button class="btn btn-outline-secondary btn-xs" data-test="goto-first-page"\n                click.delegate="goToGrid2FirstPage()">\n          <i class="fa fa-caret-left fa-lg"></i>\n        </button>\n        <button class="btn btn-outline-secondary btn-xs" data-test="goto-last-page"\n                click.delegate="goToGrid2LastPage()">\n          <i class="fa fa-caret-right fa-lg"></i>\n        </button>\n      </span>\n    </div>\n    <div class="col-sm-7">\n      <div class="alert alert-success">\n        <strong>(multi-select) Selected Row(s):</strong>\n        <span innerhtml.bind="selectedTitles"\n              data-test="grid2-selections"></span>\n      </div>\n    </div>\n  </div>\n\n  <aurelia-slickgrid grid-id="grid2"\n                     column-definitions.bind="columnDefinitions2"\n                     grid-options.bind="gridOptions2"\n                     dataset.bind="dataset2"\n                     grid-height="255"\n                     grid-width="800"\n                     asg-on-aurelia-grid-created.delegate="aureliaGrid2Ready($event.detail)"\n                     asg-on-grid-state-changed.delegate="grid2StateChanged($event.detail)">\n  </aurelia-slickgrid>\n</template>\n'},"examples/slickgrid/example11":function(e,t,i){"use strict";i.r(t),i.d(t,"Example11",(function(){return l}));var n=i("aurelia-framework"),r=i("aurelia-slickgrid"),a=(i("rqV+"),function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o}),o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(){this.title="Example 11: Add / Update / Highlight a Datagrid Item",this.subTitle='\n  Add / Update / Hightlight an Item from the Datagrid (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Add,-Update-or-Highlight-a-Datagrid-Item" target="_blank">Wiki docs</a>).\n  <ul>\n    <li><b>Note:</b> this demo is <b>only</b> on the datagrid (client) side, you still need to deal with the backend yourself</li>\n    <li>Adding an item, will always be showing as the 1st item in the grid because that is the best visual place to add it</li>\n    <li>Add/Update an item requires a valid Slickgrid Selection Model, you have 2 choices to deal with this:</li>\n    <ul><li>You can enable "enableCheckboxSelector" or "enableRowSelection" to True</li></ul>\n    <li>Click on any of the buttons below to test this out</li>\n    <li>You can change the highlighted color &amp; animation by changing the <a href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/aurelia-slickgrid/src/aurelia-slickgrid/styles/_variables.scss" target="_blank">SASS Variables</a></li>\n    <ul>\n      <li>"$row-highlight-background-color" or "$row-highlight-fade-animation"</li>\n    </ul>\n    <li>You can also add CSS class(es) on the fly (or on page load) on rows with certain criteria, (e.g. click on last button)\n    <ul>\n      <li>Example, click on button "Highlight Rows with Duration over 50" to see row styling changing. <a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Dynamically-Add-CSS-Classes-to-Item-Rows" target="_blank">Wiki doc</a></li>\n    </ul>\n  </ul>\n  ',this.defineGrid()}return e.prototype.attached=function(){this.getData()},e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e,this.dataView=e.dataView,this.grid=e.slickGrid,this.gridService=e.gridService},e.prototype.defineGrid=function(){var e=this;this.columnDefinitions=[{id:"delete",field:"id",excludeFromHeaderMenu:!0,formatter:r.Formatters.deleteIcon,minWidth:30,maxWidth:30,onCellClick:function(t,i){console.log(i),confirm("Are you sure?")&&e.aureliaGrid.gridService.deleteDataGridItemById(i.dataContext.id)}},{id:"title",name:"Title",field:"title",sortable:!0,type:r.FieldType.string,editor:{model:r.Editors.longText}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:r.FieldType.number,editor:{model:r.Editors.text},onCellChange:function(e,t){alert("onCellChange directly attached to the column definition"),console.log(t)}},{id:"complete",name:"% Complete",field:"percentComplete",formatter:r.Formatters.percentCompleteBar,type:r.FieldType.number,editor:{model:r.Editors.integer}},{id:"start",name:"Start",field:"start",formatter:r.Formatters.dateIso,sortable:!0,type:r.FieldType.date},{id:"finish",name:"Finish",field:"finish",formatter:r.Formatters.dateIso,sortable:!0,type:r.FieldType.date},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:r.Formatters.checkmark,type:r.FieldType.number,editor:{model:r.Editors.checkbox}}],this.gridOptions={asyncEditorLoading:!1,autoResize:{containerId:"demo-container",sidePadding:10},editable:!0,enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0}},e.prototype.getData=function(){for(var e=[],t=0;t<1e3;t++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());e[t]={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),effortDriven:t%5==0}}this.dataset=e},e.prototype.addNewItem=function(e){var t=this.aureliaGrid.dataView.getItems(),i=0;t.forEach((function(e){e.id>i&&(i=e.id)}));var n=i+1,r=2e3+Math.floor(10*Math.random()),a=Math.floor(11*Math.random()),o=Math.floor(29*Math.random()),l=Math.round(100*Math.random()),s={id:n,title:"Task "+n,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(r,a,o),finish:new Date(r,a+2,o),effortDriven:!0};this.aureliaGrid.gridService.addItem(s,{position:e})},e.prototype.changeDurationBackgroundColor=function(){this.dataView.getItemMetadata=this.updateItemMetadataForDurationOver50(this.dataView.getItemMetadata),this.grid.invalidate(),this.grid.render()},e.prototype.highlighFifthRow=function(){this.scrollGridTop(),this.aureliaGrid.gridService.highlightRow(4,1500)},e.prototype.updateItemMetadataForDurationOver50=function(e){var t=this;return function(i){var n=t.dataView.getItem(i),r={cssClasses:""};("object"==typeof e&&(r=e(i)),r&&n&&n.duration)&&(+n.duration>50&&(r.cssClasses=(r.cssClasses||"")+" duration-bg"));return r}},e.prototype.updateSecondItem=function(){this.scrollGridTop();var e=this.aureliaGrid.gridService.getDataItemByRowNumber(1);e.duration=Math.round(100*Math.random()),this.aureliaGrid.gridService.updateItem(e)},e.prototype.scrollGridBottom=function(){this.aureliaGrid.slickGrid.navigateBottom()},e.prototype.scrollGridTop=function(){this.aureliaGrid.slickGrid.navigateTop()},e=a([Object(n.k)(),o("design:paramtypes",[])],e)}()},"examples/slickgrid/example11.html":function(e,t){e.exports='<template>\r\n  <h2>${title}</h2>\r\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\r\n\r\n  <div class="col-sm-12">\r\n    <span>\r\n      <label>Scroll: </label>\r\n      <div class="btn-group" role="group" aria-label="...">\r\n        <button class="btn btn-sm btn-outline-secondary" click.delegate="scrollGridTop()">\r\n          <i class="fa fa-arrow-up"></i>\r\n        </button>\r\n        <button class="btn btn-sm btn-outline-secondary" click.delegate="scrollGridBottom()">\r\n          <i class="fa fa-arrow-down"></i>\r\n        </button>\r\n      </div>\r\n      <button class="btn btn-sm btn-outline-secondary" click.delegate="addNewItem()">Add New Mocked Item (top)</button>\r\n      <button class="btn btn-sm btn-outline-secondary" click.delegate="addNewItem(\'bottom\')">Add New Mocked Item\r\n        (bottom)</button>\r\n      <button class="btn btn-sm btn-outline-secondary" click.delegate="updateSecondItem()">\r\n        Update 2nd Row Item with Random Duration\r\n      </button>\r\n      <button class="btn btn-sm btn-outline-secondary" click.delegate="highlighFifthRow()">Highlight 5th Row</button>\r\n      <button class="btn btn-sm btn-outline-secondary" click.delegate="changeDurationBackgroundColor()">\r\n        Highlight Rows with Duration over 50\r\n      </button>\r\n    </span>\r\n    <hr />\r\n  </div>\r\n\r\n  <aurelia-slickgrid grid-id="grid1" column-definitions.bind="columnDefinitions" grid-options.bind="gridOptions"\r\n    dataset.bind="dataset" asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\r\n  </aurelia-slickgrid>\r\n</template>\r\n'},"examples/slickgrid/example12":function(e,t,i){"use strict";i.r(t),function(e){i.d(t,"Example12",(function(){return u}));var n=i("aurelia-framework"),r=i("aurelia-i18n"),a=i("aurelia-slickgrid"),o=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},l=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=function(t,i,n,r){return new(n||(n=e))((function(e,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function l(e){try{s(r.throw(e))}catch(e){a(e)}}function s(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(o,l)}s((r=r.apply(t,i||[])).next())}))},d=function(e,t){var i,n,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,n&&(r=2&a[0]?n.return:a[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,a[1])).done)return r;switch(n=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],n=0}finally{i=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}},c=function(e,t,i,n,r,a){var o=(a&&"function"==typeof a.getOptions?a.getOptions():{}).i18n;return o&&o.tr&&o.tr("TASK_X",{x:i})},u=function(){function e(e){this.i18n=e,this.title="Example 12: Localization (i18n)",this.subTitle='Support multiple locales with the i18next plugin, following these steps.\n    Take a look at the (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Localization" target="_blank">Wiki documentation</a>)\n    <ol class="small">\n      <li>You first need to "enableTranslate" in the Grid Options</li>\n      <li>In the Column Definitions, you have following options</li>\n      <ul>\n        <li>To translate a header title, use "nameKey" with a translate key (nameKey: \'TITLE\')</li>\n        <li>For the cell values, you need to use a Formatter, there\'s 2 ways of doing it</li>\n        <ul>\n          <li>formatter: myCustomTranslateFormatter <b>&lt;= "Title" column uses it</b></li>\n          <li>formatter: Formatters.translate <b>&lt;= "Completed" column uses it</b></li>\n        </ul>\n      </ul>\n      <li>For date localization, you need to create your own custom formatter. </li>\n      <ul>\n        <li>You can easily implement logic to switch between Formatters "dateIso" or "dateUs", depending on current locale.</li>\n      </ul>\n      <li>For the Select (dropdown) filter, you can fill in the "labelKey" property, if found it will use it, else it will use "label"</li>\n        <ul>\n          <li>What if your select options have totally different value/label pair? In this case, you can use the <b>customStructure: { label: \'customLabel\', value: \'customValue\'}</b> to change the property name(s) to use.\'</li>\n          <li>What if you want to use "customStructure" and translation? Simply pass this flag <b>enableTranslateLabel: true</b></li>\n          <li>More info on the Select Filter <a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Select-Filter" target="_blank">Wiki page</a>\n        </ul>\n        <li>For more info about "Download to File", read the <a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Export-to-File" target="_blank">Wiki page</a></li>\n      </ol>\n    ',this.duplicateTitleHeaderCount=1,this.defineGrid();this.i18n.setLocale("en"),this.selectedLanguage="en"}return e.prototype.attached=function(){this.getData(1500)},e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e,this.gridObj=e.slickGrid},e.prototype.defineGrid=function(){this.columnDefinitions=[{id:"title",name:"Title",field:"id",nameKey:"TITLE",minWidth:100,formatter:c,sortable:!0,filterable:!0,params:{useFormatterOuputToFilter:!0}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80},{id:"duration",name:"Duration (days)",field:"duration",nameKey:"DURATION",sortable:!0,formatter:a.Formatters.percentCompleteBar,minWidth:100,exportWithFormatter:!1,filterable:!0,type:a.FieldType.number,filter:{model:a.Filters.slider,params:{hideSliderNumber:!0}}},{id:"start",name:"Start",field:"start",nameKey:"START",formatter:a.Formatters.dateIso,outputType:a.FieldType.dateIso,type:a.FieldType.date,minWidth:100,filterable:!0,filter:{model:a.Filters.compoundDate}},{id:"finish",name:"Finish",field:"finish",nameKey:"FINISH",formatter:a.Formatters.dateIso,outputType:a.FieldType.dateIso,type:a.FieldType.date,minWidth:100,filterable:!0,filter:{model:a.Filters.compoundDate}},{id:"completedBool",name:"Completed",field:"completedBool",nameKey:"COMPLETED",minWidth:100,sortable:!0,formatter:a.Formatters.checkmark,exportCustomFormatter:a.Formatters.translateBoolean,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,labelKey:"TRUE"},{value:!1,labelKey:"FALSE"}],model:a.Filters.singleSelect,enableTranslateLabel:!0}},{id:"completed",name:"Completed",field:"completed",nameKey:"COMPLETED",formatter:a.Formatters.translate,sortable:!0,minWidth:100,exportWithFormatter:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:"TRUE",labelKey:"TRUE"},{value:"FALSE",labelKey:"FALSE"}],collectionSortBy:{property:"labelKey",sortDesc:!0},model:a.Filters.singleSelect,enableTranslateLabel:!0}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableAutoResize:!0,enableExcelCopyBuffer:!0,enableExcelExport:!0,enableExport:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.i18n,checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},enableCheckboxSelector:!0,enableRowSelection:!0,showCustomFooter:!0,customFooterOptions:{metricTexts:{itemsKey:"ITEMS",ofKey:"OF",lastUpdateKey:"LAST_UPDATE"},dateFormat:"YYYY-MM-DD hh:mm a",hideTotalItemCount:!1,hideLastUpdateTimestamp:!1},exportOptions:{exportWithFormatter:!0,sanitizeDataExport:!0},gridMenu:{hideExportCsvCommand:!1,hideExportTextDelimitedCommand:!1}}},e.prototype.getData=function(e){this.dataset=[];for(var t=0;t<e;t++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random());Math.round(100*Math.random());this.dataset[t]={id:t,description:t%5?"desc "+t:"🚀🦄 español",duration:Math.round(100*Math.random())+"",start:new Date(i,n,r),finish:new Date(i,n+1,r),completedBool:t%5==0,completed:t%5==0?"TRUE":"FALSE"}}},e.prototype.dynamicallyAddTitleHeader=function(){var e={id:"title"+this.duplicateTitleHeaderCount++,field:"id",nameKey:"TITLE",formatter:c,sortable:!0,minWidth:100,filterable:!0,params:{useFormatterOuputToFilter:!0}};this.columnDefinitions.push(e),this.columnDefinitions=this.columnDefinitions.slice()},e.prototype.exportToExcel=function(){this.aureliaGrid.excelExportService.exportToExcel({filename:"Export",format:a.FileType.xlsx})},e.prototype.exportToFile=function(e){void 0===e&&(e="csv"),this.aureliaGrid.exportService.exportToFile({delimiter:"csv"===e?a.DelimiterType.comma:a.DelimiterType.tab,filename:"myExport",format:"csv"===e?a.FileType.csv:a.FileType.txt})},e.prototype.gridStateChanged=function(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change)},e.prototype.switchLanguage=function(){return s(this,void 0,void 0,(function(){var e;return d(this,(function(t){switch(t.label){case 0:return e="en"===this.selectedLanguage?"fr":"en",[4,this.i18n.setLocale(e)];case 1:return t.sent(),this.selectedLanguage=e,[2]}}))}))},e=o([Object(n.k)(),l("design:paramtypes",[r.I18N])],e)}()}.call(this,i("B/eG").default)},"examples/slickgrid/example12.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\n\n  <hr />\n\n  <div class="row">\n    <button class="btn btn-outline-secondary btn-sm" click.delegate="switchLanguage()">\n      <i class="fa fa-language"></i>\n      Switch Language\n    </button>\n    <label>Locale</label>: ${selectedLanguage + \'.json\'}\n\n    <span style="margin-left: 20px">\n      <button class="btn btn-outline-secondary btn-sm" click.delegate="exportToFile(\'csv\')">\n        <i class="fa fa-download"></i>\n        Download to CSV\n      </button>\n      <button class="btn btn-outline-secondary btn-sm" click.delegate="exportToFile(\'txt\')">\n        <i class="fa fa-download"></i>\n        Download to Text\n      </button>\n      <button class="btn btn-outline-secondary btn-sm" click.delegate="exportToExcel()">\n        <i class="fa fa-file-excel-o text-success"></i>\n        Download to Excel\n      </button>\n    </span>\n    <span style="margin-left: 10px">\n      <button class="btn btn-outline-secondary btn-sm" click.delegate="dynamicallyAddTitleHeader()">\n        <i class="fa fa-plus"></i>\n        Dynamically Duplicate Title Column\n      </button>\n    </span>\n  </div>\n  <aurelia-slickgrid grid-id="grid12"\n                     column-definitions.bind="columnDefinitions"\n                     grid-options.bind="gridOptions"\n                     dataset.bind="dataset"\n                     asg-on-grid-state-changed.delegate="grid1StateChanged($event.detail)"\n                     asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\n  </aurelia-slickgrid>\n</template>\n'},"examples/slickgrid/example13":function(e,t,i){"use strict";i.r(t),i.d(t,"Example13",(function(){return l}));var n=i("aurelia-framework"),r=i("aurelia-slickgrid"),a=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(){this.title="Example 13: Grouping & Aggregators",this.subTitle='\n    <ul>\n      <li><a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Grouping-&-Aggregators" target="_blank">Wiki docs</a></li>\n      <li>Fully dynamic and interactive multi-level grouping with filtering and aggregates over 50\'000 items</li>\n      <li>Each grouping level can have its own aggregates (over child rows, child groups, or all descendant rows)..</li>\n      <li>Use "Aggregators" and "GroupTotalFormatters" directly from Aurelia-Slickgrid</li>\n    </ul>\n  ',this.processing=!1,this.defineGrid()}return e.prototype.attached=function(){this.loadData(500)},e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e,this.dataviewObj=e.dataView,this.gridObj=e.slickGrid},e.prototype.defineGrid=function(){this.columnDefinitions=[{id:"sel",name:"#",field:"num",width:40,excludeFromExport:!0,maxWidth:70,resizable:!0,filterable:!0,selectable:!1,focusable:!1},{id:"title",name:"Title",field:"title",width:50,minWidth:50,cssClass:"cell-title",filterable:!0,sortable:!0},{id:"duration",name:"Duration",field:"duration",minWidth:50,width:60,filterable:!0,filter:{model:r.Filters.slider,operator:">="},sortable:!0,type:r.FieldType.number,groupTotalsFormatter:r.GroupTotalFormatters.sumTotals,params:{groupFormatterPrefix:"Total: "}},{id:"percentComplete",name:"% Complete",field:"percentComplete",minWidth:70,width:90,formatter:r.Formatters.percentCompleteBar,filterable:!0,filter:{model:r.Filters.compoundSlider},sortable:!0,type:r.FieldType.number,groupTotalsFormatter:r.GroupTotalFormatters.avgTotalsPercentage,params:{groupFormatterPrefix:"<i>Avg</i>: "}},{id:"start",name:"Start",field:"start",minWidth:60,maxWidth:130,filterable:!0,filter:{model:r.Filters.compoundDate},sortable:!0,type:r.FieldType.dateIso,formatter:r.Formatters.dateIso,exportWithFormatter:!0},{id:"finish",name:"Finish",field:"finish",minWidth:60,maxWidth:130,filterable:!0,filter:{model:r.Filters.compoundDate},sortable:!0,type:r.FieldType.dateIso,formatter:r.Formatters.dateIso,exportWithFormatter:!0},{id:"cost",name:"Cost",field:"cost",minWidth:70,width:80,maxWidth:120,filterable:!0,filter:{model:r.Filters.compoundInputNumber},type:r.FieldType.number,sortable:!0,exportWithFormatter:!0,formatter:r.Formatters.dollar,groupTotalsFormatter:r.GroupTotalFormatters.sumTotalsDollar,params:{groupFormatterPrefix:"<b>Total</b>: "}},{id:"effortDriven",name:"Effort Driven",minWidth:30,width:80,maxWidth:90,cssClass:"cell-effort-driven",field:"effortDriven",formatter:r.Formatters.checkmark,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:r.Filters.singleSelect}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableExcelExport:!0,enableFiltering:!0,enableGrouping:!0,excelExportOptions:{sanitizeDataExport:!0},exportOptions:{sanitizeDataExport:!0}}},e.prototype.loadData=function(e){this.dataset=[];for(var t=0;t<e;t++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());this.dataset[t]={id:"id_"+t,num:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),cost:t%33==0?null:Math.round(1e4*Math.random())/100,effortDriven:t%5==0}}},e.prototype.clearGrouping=function(){this.dataviewObj.setGrouping([])},e.prototype.collapseAllGroups=function(){this.dataviewObj.collapseAllGroups()},e.prototype.expandAllGroups=function(){this.dataviewObj.expandAllGroups()},e.prototype.exportToExcel=function(){this.aureliaGrid.excelExportService.exportToExcel({filename:"Export",format:r.FileType.xlsx})},e.prototype.exportToCsv=function(e){void 0===e&&(e="csv"),this.aureliaGrid.exportService.exportToFile({delimiter:"csv"===e?r.DelimiterType.comma:r.DelimiterType.tab,filename:"myExport",format:"csv"===e?r.FileType.csv:r.FileType.txt})},e.prototype.groupByDuration=function(){this.dataviewObj.setGrouping({getter:"duration",formatter:function(e){return"Duration:  "+e.value+' <span style="color:green">('+e.count+" items)</span>"},comparer:function(e,t){return r.Sorters.numeric(e.value,t.value,r.SortDirectionNumber.asc)},aggregators:[new r.Aggregators.Avg("percentComplete"),new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,lazyTotalsCalculation:!0}),this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0}]),this.gridObj.invalidate()},e.prototype.groupByDurationOrderByCount=function(e){this.aureliaGrid.filterService.setSortColumnIcons([]),this.dataviewObj.setGrouping({getter:"duration",formatter:function(e){return"Duration:  "+e.value+' <span style="color:green">('+e.count+" items)</span>"},comparer:function(e,t){return e.count-t.count},aggregators:[new r.Aggregators.Avg("percentComplete"),new r.Aggregators.Sum("cost")],aggregateCollapsed:e,lazyTotalsCalculation:!0}),this.gridObj.invalidate()},e.prototype.groupByDurationEffortDriven=function(){this.aureliaGrid.filterService.setSortColumnIcons([]),this.dataviewObj.setGrouping([{getter:"duration",formatter:function(e){return"Duration:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("duration"),new r.Aggregators.Sum("cost")],aggregateCollapsed:!0,lazyTotalsCalculation:!0},{getter:"effortDriven",formatter:function(e){return"Effort-Driven:  "+(e.value?"True":"False")+' <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Avg("percentComplete"),new r.Aggregators.Sum("cost")],collapsed:!0,lazyTotalsCalculation:!0}]);this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0},{columnId:"effortDriven",sortAsc:!0}]),this.gridObj.invalidate()},e.prototype.groupByDurationEffortDrivenPercent=function(){this.aureliaGrid.filterService.setSortColumnIcons([]),this.dataviewObj.setGrouping([{getter:"duration",formatter:function(e){return"Duration:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("duration"),new r.Aggregators.Sum("cost")],aggregateCollapsed:!0,lazyTotalsCalculation:!0},{getter:"effortDriven",formatter:function(e){return"Effort-Driven:  "+(e.value?"True":"False")+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("duration"),new r.Aggregators.Sum("cost")],lazyTotalsCalculation:!0},{getter:"percentComplete",formatter:function(e){return"% Complete:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Avg("percentComplete")],aggregateCollapsed:!0,collapsed:!0,lazyTotalsCalculation:!0}]);this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0},{columnId:"effortDriven",sortAsc:!0},{columnId:"percentComplete",sortAsc:!0}]),this.gridObj.invalidate()},e=a([Object(n.k)(),o("design:paramtypes",[])],e)}()},"examples/slickgrid/example13.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\n\n  <div class="row col-sm-12">\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="loadData(500)">\n      500 rows\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="loadData(50000)">\n      50k rows\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="clearGrouping()">\n      <i class="fa fa-times"></i> Clear grouping\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="collapseAllGroups()">\n      <i class="fa fa-compress"></i> Collapse all groups\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="expandAllGroups()">\n      <i class="fa fa-expand"></i> Expand all groups\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="exportToExcel()">\n      <i class="fa fa-file-excel-o text-success"></i> Export to Excel\n    </button>\n  </div>\n\n  <hr />\n\n  <div class="row col-sm-12">\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDuration()">\n      Group by Duration &amp; sort groups by value\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationOrderByCount(false)">\n      Group by Duration &amp; sort groups by count\n    </button>\n  </div>\n  <div class="row col-sm-12">\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationOrderByCount(true)">\n      Group by Duration &amp; sort groups by count, aggregate collapsed\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationEffortDriven()">\n      Group by Duration then Effort-Driven\n    </button>\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationEffortDrivenPercent()">\n      Group by Duration then Effort-Driven then Percent.\n    </button>\n    <span hidden.bind="!processing">\n      <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\n    </span>\n  </div>\n\n  <aurelia-slickgrid grid-id="grid1" column-definitions.bind="columnDefinitions" grid-options.bind="gridOptions"\n                     dataset.bind="dataset"\n                     asg-on-before-export-to-excel.delegate="processing = true"\n                     asg-on-after-export-to-excel.delegate="processing = false"\n                     asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\n  </aurelia-slickgrid>\n</template>\n'},"examples/slickgrid/example14":function(e,t,i){"use strict";i.r(t),i.d(t,"Example14",(function(){return r}));var n=i("aurelia-slickgrid"),r=(i("s66f"),function(){function e(){this.title="Example 14: Column Span & Header Grouping",this.subTitle='\n  This example demonstrates how to easily span a row over multiple columns & how to group header titles.\n  <ul>\n    <li>\n      Row Colspan - (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Row-Colspan" target="_blank">Wiki docs</a>) /\n      Header Grouping - (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Header-Title-Grouping" target="_blank">Wiki docs</a>)\n    </li>\n    <li>Note that you can add Sort but remember that it will sort by the data which the row contains, even if the data is visually hidden by colspan it will still sort it</li>\n  </ul>\n  ',this.dataset1=[],this.dataset2=[],this.definedGrid1(),this.definedGrid2()}return e.prototype.attached=function(){this.dataset1=this.getData(500),this.dataset2=this.getData(500)},e.prototype.aureliaGridReady2=function(e){this.angularGrid2=e,this.gridObj2=e.slickGrid},e.prototype.definedGrid1=function(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,columnGroup:"Common Factor"},{id:"duration",name:"Duration",field:"duration",columnGroup:"Common Factor"},{id:"start",name:"Start",field:"start",columnGroup:"Period"},{id:"finish",name:"Finish",field:"finish",columnGroup:"Period"},{id:"%",name:"% Complete",field:"percentComplete",selectable:!1,columnGroup:"Analysis"},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",type:n.FieldType.boolean,columnGroup:"Analysis"}],this.gridOptions1={enableAutoResize:!1,enableCellNavigation:!0,enableColumnReorder:!1,enableSorting:!0,createPreHeaderPanel:!0,showPreHeaderPanel:!0,preHeaderPanelHeight:28,explicitInitialization:!0,colspanCallback:this.renderDifferentColspan}},e.prototype.definedGrid2=function(){this.columnDefinitions2=[{id:"sel",name:"#",field:"num",behavior:"select",cssClass:"cell-selection",width:40,resizable:!1,selectable:!1},{id:"title",name:"Title",field:"title",sortable:!0,columnGroup:"Common Factor"},{id:"duration",name:"Duration",field:"duration",columnGroup:"Common Factor"},{id:"start",name:"Start",field:"start",columnGroup:"Period"},{id:"finish",name:"Finish",field:"finish",columnGroup:"Period"},{id:"%",name:"% Complete",field:"percentComplete",selectable:!1,columnGroup:"Analysis"},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",type:n.FieldType.boolean,columnGroup:"Analysis"}],this.gridOptions2={alwaysShowVerticalScroll:!1,enableCellNavigation:!0,enableColumnReorder:!1,createPreHeaderPanel:!0,showPreHeaderPanel:!0,preHeaderPanelHeight:25,explicitInitialization:!0,frozenColumn:2,gridMenu:{hideClearFrozenColumnsCommand:!1},headerMenu:{hideFreezeColumnsCommand:!1}}},e.prototype.getData=function(e){for(var t=[],i=0;i<e;i++)t[i]={id:i,num:i,title:"Task "+i,duration:"5 days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:i%5==0};return t},e.prototype.setFrozenColumns2=function(e){this.gridObj2.setOptions({frozenColumn:e,alwaysShowVerticalScroll:!1}),this.gridOptions2=this.gridObj2.getOptions()},e.prototype.renderDifferentColspan=function(e){return e.id%2==1?{columns:{duration:{colspan:3}}}:{columns:{0:{colspan:"*"}}}},e}())},"examples/slickgrid/example14.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\n\n  <h3>Grid 1 <small>(with Header Grouping &amp; Colspan)</small></h3>\n  <aurelia-slickgrid grid-id="grid1" column-definitions.bind="columnDefinitions1" grid-options.bind="gridOptions1"\n    dataset.bind="dataset1" grid-height="275" grid-width="800">\n  </aurelia-slickgrid>\n\n  <hr />\n\n  <h3>Grid 2 <small>(with Header Grouping &amp; Frozen/Pinned Columns)</small></h3>\n\n  <div class="col-sm 12">\n    <button class="btn btn-outline-secondary btn-sm" click.delegate="setFrozenColumns2(-1)"\n      data-test="remove-frozen-column-button">\n      <i class="fa fa-times fa-lg"></i> Remove Frozen Columns\n    </button>\n    <button class="btn btn-outline-secondary btn-sm" click.delegate="setFrozenColumns2(2)"\n      data-test="set-3frozen-columns">\n      <i class="fa fa-thumb-tack fa-lg"></i> Set 3 Frozen Columns\n    </button>\n  </div>\n\n  <aurelia-slickgrid grid-id="grid2" column-definitions.bind="columnDefinitions2" grid-options.bind="gridOptions2"\n    dataset.bind="dataset2" grid-height="275" grid-width="800"\n    asg-on-aurelia-grid-created.delegate="aureliaGridReady2($event.detail)">\n  </aurelia-slickgrid>\n</template>'},"examples/slickgrid/example15":function(e,t,i){"use strict";i.r(t),function(e){i.d(t,"Example15",(function(){return u}));var n=i("aurelia-i18n"),r=i("aurelia-framework"),a=i("aurelia-slickgrid"),o=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},l=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=function(t,i,n,r){return new(n||(n=e))((function(e,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function l(e){try{s(r.throw(e))}catch(e){a(e)}}function s(t){var i;t.done?e(t.value):(i=t.value,i instanceof n?i:new n((function(e){e(i)}))).then(o,l)}s((r=r.apply(t,i||[])).next())}))},d=function(e,t){var i,n,r,a,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function l(a){return function(l){return function(a){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,n&&(r=2&a[0]?n.return:a[0]?n.throw||((r=n.return)&&r.call(n),0):n.next)&&!(r=r.call(n,a[1])).done)return r;switch(n=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],n=0}finally{i=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,l])}}};function c(e,t){return Math.floor(Math.random()*(t-e+1)+e)}var u=function(){function e(e){this.i18n=e,this.title="Example 15: Grid State & Presets using Local Storage",this.subTitle='\n  Grid State & Preset (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Grid-State-&-Preset" target="_blank">Wiki docs</a>)\n  <br/>\n  <ul class="small">\n    <li>Uses Local Storage to persist the Grid State and uses Grid Options "presets" to put the grid back to it\'s previous state</li>\n    <ul>\n       <li>to demo this, simply change any columns (position reorder, visibility, size, filter, sort), then refresh your browser with (F5)</li>\n    </ul>\n    <li>Local Storage is just one option, you can use whichever is more convenient for you (Local Storage, Session Storage, DB, ...)</li>\n  </ul>\n';var t=JSON.parse(localStorage.gridState||null);this.defineGrid(t);this.i18n.setLocale("en"),this.selectedLanguage="en"}return e.prototype.attached=function(){this.dataset=this.getData(500)},e.prototype.detached=function(){this.saveCurrentGridState()},e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e},e.prototype.clearGridStateFromLocalStorage=function(){localStorage.gridState=null,this.aureliaGrid.gridService.resetGrid(this.columnDefinitions),this.aureliaGrid.paginationService.changeItemPerPage(25)},e.prototype.defineGrid=function(e){for(var t=[],i=0;i<500;i++)t.push({value:i,label:i});this.columnDefinitions=[{id:"title",name:"Title",field:"title",nameKey:"TITLE",filterable:!0,sortable:!0,type:a.FieldType.string,minWidth:45,width:100,filter:{model:a.Filters.compoundInput}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80,width:100,type:a.FieldType.string,filter:{model:a.Filters.input}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:a.FieldType.number,exportCsvForceToKeepAsString:!0,minWidth:55,width:100,nameKey:"DURATION",filterable:!0,filter:{collection:t,model:a.Filters.multipleSelect,filterOptions:{maxHeight:250,width:175}}},{id:"complete",name:"% Complete",field:"percentComplete",nameKey:"PERCENT_COMPLETE",minWidth:70,type:a.FieldType.number,sortable:!0,width:100,formatter:a.Formatters.percentCompleteBar,filterable:!0,filter:{model:a.Filters.slider,operator:">"}},{id:"start",name:"Start",field:"start",nameKey:"START",formatter:a.Formatters.dateIso,sortable:!0,minWidth:75,exportWithFormatter:!0,width:100,type:a.FieldType.date,filterable:!0,filter:{model:a.Filters.compoundDate}},{id:"completed",field:"completed",nameKey:"COMPLETED",minWidth:85,maxWidth:85,formatter:a.Formatters.checkmark,width:100,type:a.FieldType.boolean,sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:a.Filters.singleSelect}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableCheckboxSelector:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.i18n,columnPicker:{hideForceFitButton:!0},gridMenu:{hideForceFitButton:!0},enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,30,40,50,75,100],pageSize:25}},e&&(this.gridOptions.presets=e)},e.prototype.getData=function(e){for(var t=[],i=0;i<e;i++){var n=Math.round(100*Math.random()),r=c(2e3,2025),a=c(10,25),o=c(1,12),l=o<10?"0"+o:o,s=c(10,28),d=c(0,100),u=c(10,23),p=c(10,59);t[i]={id:i,title:"Task "+i,description:i%5?"desc "+i:null,duration:n,percentComplete:d,percentCompleteNumber:d,start:new Date(r,o,s),usDateShort:o+"/"+s+"/"+a,utcDate:r+"-"+l+"-"+s+"T"+u+":"+p+":"+p+"Z",completed:i%3==0}}return t},e.prototype.gridStateChanged=function(e){console.log("Client sample, Grid State changed:: ",e),localStorage.gridState=JSON.stringify(e.gridState)},e.prototype.saveCurrentGridState=function(){var e=this.aureliaGrid.gridStateService.getCurrentGridState();console.log("Client sample, current Grid State:: ",e),localStorage.gridState=JSON.stringify(e)},e.prototype.switchLanguage=function(){return s(this,void 0,void 0,(function(){var e;return d(this,(function(t){switch(t.label){case 0:return e="en"===this.selectedLanguage?"fr":"en",[4,this.i18n.setLocale(e)];case 1:return t.sent(),this.selectedLanguage=e,[2]}}))}))},e.prototype.useDefaultPresets=function(){return{columns:[{columnId:"description",width:170},{columnId:"title",width:55},{columnId:"duration"},{columnId:"complete"},{columnId:"start"},{columnId:"usDateShort"},{columnId:"utcDate"}],filters:[{columnId:"duration",searchTerms:[2,22,44]},{columnId:"usDateShort",operator:"<",searchTerms:["4/20/25"]}],sorters:[{columnId:"duration",direction:"DESC"},{columnId:"complete",direction:"ASC"}]}},e=o([Object(r.k)(),l("design:paramtypes",[n.I18N])],e)}()}.call(this,i("B/eG").default)},"examples/slickgrid/example15.html":function(e,t){e.exports='<template>\r\n  <h2>${title}</h2>\r\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\r\n\r\n  <button class="btn btn-outline-secondary btn-sm" click.delegate="clearGridStateFromLocalStorage()">\r\n    <i class="fa fa-times"></i>\r\n    Clear Grid State from Local Storage &amp; Reset Grid\r\n  </button>\r\n  <button class="btn btn-outline-secondary btn-sm" click.delegate="switchLanguage()">\r\n    <i class="fa fa-language"></i>\r\n    Switch Language\r\n  </button>\r\n\r\n  <aurelia-slickgrid\r\n    grid-id="grid15"\r\n    column-definitions.bind="columnDefinitions"\r\n    grid-options.bind="gridOptions"\r\n    dataset.bind="dataset"\r\n    asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)"\r\n    asg-on-grid-state-changed.delegate="gridStateChanged($event.detail)">\r\n  </aurelia-slickgrid>\r\n</template>\r\n'},"examples/slickgrid/example16":function(e,t,i){"use strict";i.r(t),i.d(t,"Example16",(function(){return s}));var n=i("aurelia-framework"),r=i("aurelia-i18n"),a=i("aurelia-slickgrid"),o=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},l=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=function(){function e(e){this.i18n=e,this.title="Example 16: Row Move & Checkbox Selector",this.subTitle='\n    This example demonstrates using the <b>Slick.Plugins.RowMoveManager</b> plugin to easily move a row in the grid.<br/>\n    <ul>\n      <li>Click to select, Ctrl+Click to toggle selection, Shift+Click to select a range.</li>\n      <li>Drag one or more rows by the handle (icon) to reorder</li>\n      <li>If you plan to use Row Selection + Row Move, then use "singleRowMove: true" and "disableRowSelection: true"</li>\n      <li>You can change "columnIndexPosition" to move the icon position of any extension (RowMove, RowDetail or RowSelector icon)</li>\n      <ul>\n        <li>You will also want to enable the DataView "syncGridSelection: true" to keep row selection even after a row move</li>\n      </ul>\n      <li>If you plan to use only Row Move, then you could keep default values (or omit them completely) of "singleRowMove: false" and "disableRowSelection: false"</li>\n      <ul>\n        <li>SingleRowMove has the name suggest will only move 1 row at a time, by default it will move any row(s) that are selected unless you disable the flag</li>\n      </ul>\n    </ul>\n  ',this.selectedLanguage=this.i18n.getLocale(),this.defineGrid()}return e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e},Object.defineProperty(e.prototype,"rowMoveInstance",{get:function(){return this.aureliaGrid&&this.aureliaGrid.extensionService.getSlickgridAddonInstance(a.ExtensionName.rowMoveManager)||{}},enumerable:!1,configurable:!0}),e.prototype.attached=function(){this.getData()},e.prototype.defineGrid=function(){var e=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title"},{id:"duration",name:"Duration",field:"duration",sortable:!0},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0},{id:"start",name:"Start",field:"start"},{id:"finish",name:"Finish",field:"finish"},{id:"effort-driven",name:"Completed",field:"effortDriven",formatter:a.Formatters.checkmark}],this.gridOptions={enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:10},enableCheckboxSelector:!0,enableRowSelection:!0,rowSelectionOptions:{selectActiveRow:!1},dataView:{syncGridSelection:!0},enableRowMoveManager:!0,rowMoveManager:{singleRowMove:!0,disableRowSelection:!0,cancelEditOnDrag:!0,onBeforeMoveRows:function(t,i){return e.onBeforeMoveRow(t,i)},onMoveRows:function(t,i){return e.onMoveRows(t,i)}},enableTranslate:!0,i18n:this.i18n}},e.prototype.getData=function(){for(var e=[],t=0;t<500;t++)e[t]={id:t,title:"Task "+t,duration:Math.round(25*Math.random())+" days",percentComplete:Math.round(100*Math.random()),start:"01/01/2009",finish:"01/05/2009",effortDriven:t%5==0};this.dataset=e},e.prototype.onBeforeMoveRow=function(e,t){for(var i=0;i<t.rows.length;i++)if(t.rows[i]===t.insertBefore||t.rows[i]===t.insertBefore-1)return e.stopPropagation(),!1;return!0},e.prototype.onMoveRows=function(e,t){var i=[],n=t.rows,r=t.insertBefore,a=this.dataset.slice(0,r),o=this.dataset.slice(r,this.dataset.length);n.sort((function(e,t){return e-t}));for(var l=0;l<n.length;l++)i.push(this.dataset[n[l]]);n.reverse();for(l=0;l<n.length;l++){var s=n[l];s<r?a.splice(s,1):o.splice(s-r,1)}var d=a.concat(i.concat(o)),c=[];for(l=0;l<n.length;l++)c.push(a.length+l);this.aureliaGrid.slickGrid.resetActiveCell(),this.dataset=d},e=o([Object(n.k)(),l("design:paramtypes",[r.I18N])],e)}()},"examples/slickgrid/example16.html":function(e,t){e.exports='<template>\r\n  <h2>${title}</h2>\r\n  <div class="subtitle"\r\n       innerhtml.bind="subTitle"></div>\r\n\r\n  <aurelia-slickgrid grid-id="grid16"\r\n                     column-definitions.bind="columnDefinitions"\r\n                     grid-options.bind="gridOptions"\r\n                     dataset.bind="dataset"\r\n                     asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\r\n  </aurelia-slickgrid>\r\n</template>\r\n'},"examples/slickgrid/example17":function(e,t,i){"use strict";i.r(t),i.d(t,"Example17",(function(){return s}));i("4Y23"),i("MLAY");var n=i("aurelia-framework"),r=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},a=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=function(e,t,i,n,r){return r&&r.brand&&r.brand.name||""},l=function(e,t,i,n,r){var a="";return r&&r.octopart_url&&r.mpn&&(a='<a href="'+r.octopart_url+'" target="_blank">'+r.mpn+"</a>"),a},s=function(){function e(){this._eventHandler=new Slick.EventHandler,this.title="Example 17: Octopart Catalog Search - Remote Model Plugin",this.subTitle='\n    This example demonstrates how to use "slick.remotemodel.js" or any Remote implementation through an external Remote Service\n    <ul>\n      <li>Your browser might block access to the Octopart query, if you get "block content" then just unblock it.</li>\n      <li>If the demo throws some errors, try again later (there\'s a limit per day).</li>\n      <li>\n        Uses <a href="https://github.com/6pac/SlickGrid/blob/master/slick.remotemodel.js" target="_blank">slick.remotemodel.js</a>\n        which is hooked up to load search results from Octopart, but can easily be extended\n        to support any JSONP-compatible backend that accepts paging parameters.\n      </li>\n      <li>\n        This demo implements a custom DataView, however please note that you are on your own to implement all necessary DataView methods\n        for Sorting, Filtering, etc...\n      </li>\n      <li>\n        Soure code for this example is available <a href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/doc/github-demo/src/examples/slickgrid/example17.ts" target="_blank">here</a>\n      </li>\n    </ul>\n  ',this.dataset=[],this.loading=!1,this.defineGrid(),this.loaderDataView=new Slick.Data.RemoteModel,this.customDataView=this.loaderDataView&&this.loaderDataView.data}return e.prototype.attached=function(){this.hookAllLoaderEvents()},e.prototype.detached=function(){this._eventHandler.unsubscribeAll()},e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e,this.gridObj=e.slickGrid,this.loaderDataView.setSort("score",-1),this.gridObj.setSortColumn("score",!1),this.gridObj.onViewportChanged.notify()},e.prototype.defineGrid=function(){this.columnDefinitions=[{id:"mpn",name:"MPN",field:"mpn",formatter:l,width:100,sortable:!0},{id:"brand",name:"Brand",field:"brand.name",formatter:o,width:100,sortable:!0},{id:"short_description",name:"Description",field:"short_description",width:520}],this.gridOptions={enableAutoResize:!0,autoResize:{containerId:"demo-container",sidePadding:10},enableCellNavigation:!0,enableColumnReorder:!1,enableGridMenu:!1,multiColumnSort:!1}},e.prototype.hookAllLoaderEvents=function(){var e=this;this._eventHandler&&this._eventHandler.subscribe&&this.loaderDataView&&this.loaderDataView.onDataLoading&&this.loaderDataView.onDataLoaded&&(this._eventHandler.subscribe(this.loaderDataView.onDataLoading,(function(t,i){e.loading=!0})),this._eventHandler.subscribe(this.loaderDataView.onDataLoaded,(function(t,i){if(i&&e.gridObj&&e.gridObj.invalidateRow&&e.gridObj.updateRowCount&&e.gridObj.render){for(var n=i.from;n<=i.to;n++)e.gridObj.invalidateRow(n);e.gridObj.updateRowCount(),e.gridObj.render(),e.loading=!1}})))},e.prototype.searchChanged=function(e){if(e&&this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData&&this.loaderDataView.setSearch){var t=this.gridObj.getViewport();this.loaderDataView.setSearch(e),this.loaderDataView.ensureData(t.top,t.bottom)}},e.prototype.onSort=function(e,t){if(this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData&&this.loaderDataView.setSort){var i=this.gridObj.getViewport();t&&t.sortCol&&t.sortCol.field&&this.loaderDataView.setSort(t.sortCol.field,t.sortAsc?1:-1),this.loaderDataView.ensureData(i.top,i.bottom)}},e.prototype.onViewportChanged=function(e,t){if(this.gridObj&&this.gridObj.getViewport&&this.loaderDataView&&this.loaderDataView.ensureData){var i=this.gridObj.getViewport();this.loaderDataView.ensureData(i.top,i.bottom)}},r([Object(n.l)({defaultBindingMode:n.m.twoWay}),a("design:type",String)],e.prototype,"search",void 0),e}()},"examples/slickgrid/example17.html":function(e,t){e.exports='<template>\r\n  <h2>${title}</h2>\r\n  <div class="subtitle"\r\n       innerhtml.bind="subTitle"></div>\r\n\r\n  <hr>\r\n\r\n  <div class="col-md-6"\r\n       style="margin-bottom: 15px">\r\n    <label>Octopart Catalog Search <small>(throttle search to 1.5sec)</small></label>\r\n    <input type="text"\r\n           class="form-control"\r\n           value.bind="search & throttle:1500">\r\n  </div>\r\n\r\n  <div class="alert alert-danger col-md-7" role="alert">\r\n    <strong>Note:</strong>\r\n    this demo no longer displays any results because the WebAPI Key to connect and query the <b>Octopart Component\r\n      Search</b> is no longer valid. However the concept remains valid, which is to use your own Custom DataView\r\n    instead of the default SlickGrid DataView used by this library.\r\n  </div>\r\n\r\n  <div class="alert alert-warning col-md-6"\r\n       role="alert"\r\n       if.bind="loading">\r\n    <i class="fa fa-refresh fa-spin fa-lg fa-fw"></i>\r\n    <span>Loading...</span>\r\n  </div>\r\n\r\n  <aurelia-slickgrid grid-id="grid1"\r\n                     column-definitions.bind="columnDefinitions"\r\n                     grid-options.bind="gridOptions"\r\n                     dataset.bind="dataset"\r\n                     custom-data-view.bind="customDataView"\r\n                     asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)"\r\n                     sg-on-viewport-changed.delegate="onViewportChanged($event.detail.eventData, $event.detail.args)"\r\n                     sg-on-sort.delegate="onSort($event.detail.eventData, $event.detail.args)">\r\n  </aurelia-slickgrid>\r\n</template>\r\n'},"examples/slickgrid/example18":function(e,t,i){"use strict";i.r(t),i.d(t,"Example18",(function(){return s}));var n=i("aurelia-framework"),r=i("aurelia-slickgrid"),a=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var n=Array(e),r=0;for(t=0;t<i;t++)for(var a=arguments[t],o=0,l=a.length;o<l;o++,r++)n[r]=a[o];return n},s=function(){function e(){this.title="Example 18: Draggable Grouping & Aggregators",this.subTitle='\n  <ul>\n  <li><a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Grouping-&-Aggregators" target="_blank">Wiki docs</a></li>\n  <li>This example shows 3 ways of grouping</li>\n  <ol>\n  <li>Drag any Column Header on the top placeholder to group by that column (support moti-columns grouping by adding more columns to the drop area).</li>\n  <li>Use buttons and defined functions to group by whichever field you want</li>\n  <li>Use the Select dropdown to group, the position of the Selects represent the grouping level</li>\n  </ol>\n  <li>Fully dynamic and interactive multi-level grouping with filtering and aggregates ovor 50\'000 items</li>\n  <li>Each grouping level can have its own aggregates (over child rows, child groups, or all descendant rows)..</li>\n  <li>Use "Aggregators" and "GroupTotalFormatters" directly from Aurelia-Slickgrid</li>\n  </ul>\n  ',this.durationOrderByCount=!1,this.processing=!1,this.selectedGroupingFields=["","",""],this.loadData(500),this.defineGrid()}return e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e,this.gridObj=e.slickGrid,this.dataviewObj=e.dataView},e.prototype.defineGrid=function(){var e=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title",width:70,minWidth:50,cssClass:"cell-title",filterable:!0,sortable:!0,grouping:{getter:"title",formatter:function(e){return"Title:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"duration",name:"Duration",field:"duration",width:70,sortable:!0,filterable:!0,filter:{model:r.Filters.slider,operator:">="},type:r.FieldType.number,groupTotalsFormatter:r.GroupTotalFormatters.sumTotals,grouping:{getter:"duration",formatter:function(e){return"Duration:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},comparer:function(t,i){return e.durationOrderByCount?t.count-i.count:r.Sorters.numeric(t.value,i.value,r.SortDirectionNumber.asc)},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"percentComplete",name:"% Complete",field:"percentComplete",minWidth:70,width:90,formatter:r.Formatters.percentCompleteBar,type:r.FieldType.number,filterable:!0,filter:{model:r.Filters.compoundSlider},sortable:!0,groupTotalsFormatter:r.GroupTotalFormatters.avgTotalsPercentage,grouping:{getter:"percentComplete",formatter:function(e){return"% Complete:  "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,collapsed:!1},params:{groupFormatterPrefix:"<i>Avg</i>: "}},{id:"start",name:"Start",field:"start",minWidth:60,sortable:!0,filterable:!0,filter:{model:r.Filters.compoundDate},formatter:r.Formatters.dateIso,type:r.FieldType.dateUtc,outputType:r.FieldType.dateIso,exportWithFormatter:!0,grouping:{getter:"start",formatter:function(e){return"Start: "+e.value+'  <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"finish",name:"Finish",field:"finish",minWidth:60,sortable:!0,filterable:!0,filter:{model:r.Filters.compoundDate},formatter:r.Formatters.dateIso,type:r.FieldType.dateUtc,outputType:r.FieldType.dateIso,exportWithFormatter:!0,grouping:{getter:"finish",formatter:function(e){return"Finish: "+e.value+' <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!1,collapsed:!1}},{id:"cost",name:"Cost",field:"cost",width:90,sortable:!0,filterable:!0,filter:{model:r.Filters.compoundInput},formatter:r.Formatters.dollar,groupTotalsFormatter:r.GroupTotalFormatters.sumTotalsDollar,type:r.FieldType.number,grouping:{getter:"cost",formatter:function(e){return"Cost: "+e.value+' <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],aggregateCollapsed:!0,collapsed:!0}},{id:"effortDriven",name:"Effort Driven",field:"effortDriven",width:80,minWidth:20,maxWidth:100,cssClass:"cell-effort-driven",sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:r.Filters.singleSelect},formatter:r.Formatters.checkmark,grouping:{getter:"effortDriven",formatter:function(e){return"Effort-Driven: "+(e.value?"True":"False")+' <span style="color:green">('+e.count+" items)</span>"},aggregators:[new r.Aggregators.Sum("cost")],collapsed:!1}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableDraggableGrouping:!0,createPreHeaderPanel:!0,showPreHeaderPanel:!0,preHeaderPanelHeight:40,enableFiltering:!0,enableSorting:!0,enableColumnReorder:!0,exportOptions:{sanitizeDataExport:!0},gridMenu:{onCommand:function(t,i){"toggle-preheader"===i.command&&e.clearGrouping()}},draggableGrouping:{dropPlaceHolderText:"Drop a column header here to group by the column",deleteIconCssClass:"fa fa-times",onGroupChanged:function(t,i){return e.onGroupChanged(i)},onExtensionRegistered:function(t){return e.draggableGroupingPlugin=t}}}},e.prototype.loadData=function(e){this.dataset=[];for(var t=0;t<e;t++){var i=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),a=Math.round(100*Math.random());this.dataset[t]={id:"id_"+t,num:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:a,percentCompleteNumber:a,start:new Date(i,n,r),finish:new Date(i,n+1,r),cost:t%33==0?null:Math.round(1e4*Math.random())/100,effortDriven:t%5==0}}},e.prototype.clearGroupsAndSelects=function(){this.clearGroupingSelects(),this.clearGrouping()},e.prototype.clearGroupingSelects=function(){var e=this;this.selectedGroupingFields.forEach((function(t,i){return e.selectedGroupingFields[i]=""})),this.selectedGroupingFields=l(this.selectedGroupingFields)},e.prototype.clearGrouping=function(){this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups&&this.draggableGroupingPlugin.clearDroppedGroups(),this.gridObj.invalidate()},e.prototype.collapseAllGroups=function(){this.dataviewObj.collapseAllGroups()},e.prototype.expandAllGroups=function(){this.dataviewObj.expandAllGroups()},e.prototype.exportToExcel=function(){this.aureliaGrid.excelExportService.exportToExcel({filename:"Export",format:r.FileType.xlsx})},e.prototype.exportToCsv=function(e){void 0===e&&(e="csv"),this.aureliaGrid.exportService.exportToFile({delimiter:"csv"===e?r.DelimiterType.comma:r.DelimiterType.tab,filename:"myExport",format:"csv"===e?r.FileType.csv:r.FileType.txt})},e.prototype.groupByDuration=function(){this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups&&(this.showPreHeader(),this.draggableGroupingPlugin.setDroppedGroups("duration"),this.gridObj.invalidate())},e.prototype.groupByDurationOrderByCount=function(e){void 0===e&&(e=!1),this.durationOrderByCount=e,this.clearGrouping(),this.groupByDuration();var t=e?[]:[{columnId:"duration",sortAsc:!0}];this.aureliaGrid.filterService.setSortColumnIcons(t),this.gridObj.invalidate()},e.prototype.groupByDurationEffortDriven=function(){if(this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups){this.showPreHeader(),this.draggableGroupingPlugin.setDroppedGroups(["duration","effortDriven"]),this.gridObj.invalidate();this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0}])}},e.prototype.groupByFieldName=function(e,t){if(this.clearGrouping(),this.draggableGroupingPlugin&&this.draggableGroupingPlugin.setDroppedGroups){this.showPreHeader();var i=this.selectedGroupingFields.filter((function(e){return""!==e}));0===i.length?this.clearGrouping():this.draggableGroupingPlugin.setDroppedGroups(i),this.gridObj.invalidate()}},e.prototype.onGroupChanged=function(e){var t=this,i=e&&e.caller||[],n=e&&e.groupColumns||[];Array.isArray(this.selectedGroupingFields)&&Array.isArray(n)&&n.length>0?(this.selectedGroupingFields.forEach((function(e,i){return t.selectedGroupingFields[i]=n[i]&&n[i].getter||""})),this.selectedGroupingFields=l(this.selectedGroupingFields)):0===n.length&&"remove-group"===i&&this.clearGroupingSelects()},e.prototype.showPreHeader=function(){this.gridObj.setPreHeaderPanelVisibility(!0)},e.prototype.setFiltersDynamically=function(){this.aureliaGrid.filterService.updateFilters([{columnId:"percentComplete",operator:">=",searchTerms:["55"]},{columnId:"cost",operator:"<",searchTerms:["80"]}])},e.prototype.setSortingDynamically=function(){this.aureliaGrid.sortService.updateSorting([{columnId:"percentComplete",direction:"ASC"}])},e.prototype.toggleDraggableGroupingRow=function(){this.clearGroupsAndSelects(),this.gridObj.setPreHeaderPanelVisibility(!this.gridObj.getOptions().showPreHeaderPanel)},e=a([Object(n.k)(),o("design:paramtypes",[])],e)}()},"examples/slickgrid/example18.html":function(e,t){e.exports='<template>\r\n  <h2>${title}</h2>\r\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\r\n\r\n  <form class="form-inline">\r\n    <div class="row col-sm-12">\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="loadData(500)">\r\n        500 rows\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="loadData(50000)">\r\n        50k rows\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="clearGroupsAndSelects()">\r\n        <i class="fa fa-times"></i> Clear grouping\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="collapseAllGroups()">\r\n        <i class="fa fa-compress"></i> Collapse all groups\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="expandAllGroups()">\r\n        <i class="fa fa-expand"></i> Expand all groups\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="toggleDraggableGroupingRow()">\r\n        Toggle Draggable Grouping Row\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="exportToExcel()">\r\n        <i class="fa fa-file-excel-o text-success"></i> Export to Excel\r\n      </button>\r\n    </div>\r\n\r\n    <div class="row col-sm-12">\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationOrderByCount(false)">\r\n        Group by duration &amp; sort groups by value\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationOrderByCount(true)">\r\n        Group by duration &amp; sort groups by count\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" click.delegate="groupByDurationEffortDriven()">\r\n        Group by Duration then Effort-Driven\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" data-test="set-dynamic-filter"\r\n        click.delegate="setFiltersDynamically()">\r\n        Set Filters Dynamically\r\n      </button>\r\n      <button class="btn btn-outline-secondary btn-xs" data-test="set-dynamic-sorting"\r\n        click.delegate="setSortingDynamically()">\r\n        Set Sorting Dynamically\r\n      </button>\r\n    </div>\r\n\r\n    <div class="col-sm-12">\r\n      <br>\r\n    </div>\r\n\r\n    <div class="row col-sm-12">\r\n      <div class="form-row">\r\n        <div class="form-group">\r\n          <label for="field1" class="col-sm-3 mb-2">Group by field(s)</label>\r\n          <div class="form-group col-md-3" repeat.for="groupField of selectedGroupingFields">\r\n            <select class="form-control" change.delegate="groupByFieldName(column.id, $index)"\r\n              value.bind="selectedGroupingFields[$index]">\r\n              <option model.bind="\'\'">...</option>\r\n              <option model.bind="column.id" repeat.for="column of columnDefinitions">${column.name}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class="col-sm-12">\r\n    <hr>\r\n  </div>\r\n\r\n  <aurelia-slickgrid grid-id="grid1" column-definitions.bind="columnDefinitions" grid-options.bind="gridOptions"\r\n    dataset.bind="dataset" asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\r\n  </aurelia-slickgrid>\r\n</template>\r\n'},"examples/slickgrid/example19":function(e,t,i){"use strict";i.r(t),function(e){i.d(t,"Example19",(function(){return l}));var n=i("aurelia-framework"),r=i("aurelia-slickgrid"),a=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},o=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function t(){this.detailViewRowCount=9,this.title="Example 19: Row Detail View",this.subTitle='\n    Add functionality to show extra information with a Row Detail View, (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Row-Detail" target="_blank">Wiki docs</a>)\n    <ul>\n      <li>Click on the row "+" icon or anywhere on the row to open it (the latter can be changed via property "useRowClick: false")</li>\n      <li>Pass a View/Model as a Template to the Row Detail</li>\n      <li>You can use "expandableOverride()" callback to override logic to display expand icon on every row (for example only show it every 2nd row)</li>\n    </ul>\n  ',this.flashAlertType="info",this.defineGrid()}return t.prototype.aureliaGridReady=function(e){this.aureliaGrid=e},Object.defineProperty(t.prototype,"rowDetailInstance",{get:function(){return this.aureliaGrid&&this.aureliaGrid.extensionService.getSlickgridAddonInstance(r.ExtensionName.rowDetailView)||{}},enumerable:!1,configurable:!0}),t.prototype.attached=function(){this.getData()},t.prototype.defineGrid=function(){var e=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,type:r.FieldType.string,width:70,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",formatter:r.Formatters.decimal,params:{minDecimal:1,maxDecimal:2},sortable:!0,type:r.FieldType.number,minWidth:90,filterable:!0},{id:"percent2",name:"% Complete",field:"percentComplete2",formatter:r.Formatters.progressBar,type:r.FieldType.number,sortable:!0,minWidth:100,filterable:!0,filter:{model:r.Filters.slider,operator:">"}},{id:"start",name:"Start",field:"start",formatter:r.Formatters.dateIso,sortable:!0,type:r.FieldType.date,minWidth:90,exportWithFormatter:!0,filterable:!0,filter:{model:r.Filters.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:r.Formatters.dateIso,sortable:!0,type:r.FieldType.date,minWidth:90,exportWithFormatter:!0,filterable:!0,filter:{model:r.Filters.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",minWidth:100,formatter:r.Formatters.checkmark,type:r.FieldType.boolean,filterable:!0,sortable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:r.Filters.singleSelect}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableFiltering:!0,enableRowDetailView:!0,rowSelectionOptions:{selectActiveRow:!0},datasetIdPropertyName:"rowId",rowDetailView:{process:function(t){return e.simulateServerAsyncCall(t)},loadOnce:!0,singleRowExpand:!1,useRowClick:!0,panelRows:this.detailViewRowCount,preloadView:"examples/slickgrid/example19-preload.html",viewModel:"examples/slickgrid/example19-detail-view",parent:this}}},t.prototype.getData=function(){this.dataset=[];for(var e=0;e<1e3;e++){var t=2e3+Math.floor(10*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),r=Math.round(100*Math.random());this.dataset[e]={rowId:e,title:"Task "+e,duration:e%33==0?null:100*Math.random()+"",percentComplete:r,percentComplete2:r,percentCompleteNumber:r,start:new Date(t,i,n),finish:new Date(t,i+1,n),effortDriven:e%5==0}}},t.prototype.changeDetailViewRowCount=function(){var e=this.rowDetailInstance.getOptions();e&&e.panelRows&&(e.panelRows=this.detailViewRowCount,this.rowDetailInstance.setOptions(e))},t.prototype.closeAllRowDetail=function(){this.rowDetailInstance.collapseAll()},t.prototype.showFlashMessage=function(e,t){void 0===t&&(t="info"),this.message=e,this.flashAlertType=t},t.prototype.simulateServerAsyncCall=function(t){var i=this,n=["John Doe","Jane Doe","Chuck Norris","Bumblebee","Jackie Chan","Elvis Presley","Bob Marley","Mohammed Ali","Bruce Lee","Rocky Balboa"];return new e((function(e){setTimeout((function(){var r=t;r.assignee=n[i.randomNumber(0,10)],r.reporter=n[i.randomNumber(0,10)],e(r)}),1e3)}))},t.prototype.randomNumber=function(e,t){return Math.floor(Math.random()*(t-e+1)+e)},a([n.l,o("design:type",Object)],t.prototype,"detailViewRowCount",void 0),t=a([Object(n.k)(),o("design:paramtypes",[])],t)}()}.call(this,i("B/eG").default)},"examples/slickgrid/example19-detail-view":function(e,t,i){"use strict";i.r(t),i.d(t,"DetailViewCustomElement",(function(){return o}));var n=i("aurelia-framework"),r=function(e,t,i,n){var r,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(o=(a<3?r(o):a>3?r(t,i,o):r(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},a=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=function(){function e(){}return e.prototype.bind=function(e,t){t&&t.parentOverrideContext&&t.parentOverrideContext.bindingContext&&t.parentOverrideContext.bindingContext.model&&this.bindReferences(t.parentOverrideContext.bindingContext)},e.prototype.bindReferences=function(e){e&&(this.model=e.model,this.addon=e.addon,this.grid=e.grid,this.dataView=e.dataView,this.parent=e.parent)},e.prototype.alertAssignee=function(e){"string"==typeof e?alert("Assignee on this task is: "+e.toUpperCase()):alert("No one is assigned to this task.")},e.prototype.deleteRow=function(e){confirm("Are you sure that you want to delete "+e.title+"?")&&(this.addon.collapseAll(),this.dataView.deleteItem(e.rowId),this.parent.showFlashMessage("Deleted row with "+e.title,"danger"))},e.prototype.callParentMethod=function(e){this.parent.showFlashMessage("We just called Parent Method from the Row Detail Child Component on "+e.title)},r([Object(n.l)(),a("design:type",Object)],e.prototype,"model",void 0),e}()},"examples/slickgrid/example19-detail-view.html":function(e,t){e.exports='<template>\n  <div class="container" style="margin-top: 10px">\n    <h3>${model.title}</h3>\n    <div class="row">\n      <div class="col-xs-3"><label>Assignee:</label> <input class="form-control" value.bind="model.assignee" /></div>\n      <div class="col-xs-3"><label>Reporter:</label> <span>${model.reporter}</span></div>\n      <div class="col-xs-2"><label>Duration:</label> <span>${model.duration}</span></div>\n      <div class="col-xs-2"><label>% Complete:</label> <span>${model.percentComplete}</span></div>\n    </div>\n\n    <div class="row">\n      <div class="col-xs-3"><label>Start:</label> <span>${model.start | dateFormat: \'YYYY-MM-DD\'}</span></div>\n      <div class="col-xs-3"><label>Finish:</label> <span>${model.finish | dateFormat: \'YYYY-MM-DD\'}</span></div>\n      <div class="col-xs-2"><label>Effort Driven:</label> <i class.bind="model.effortDriven ? \'fa fa-check\' : \'\'"></i>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class="col-sm-8">\n      <h4>\n        Find out who is the Assignee\n        <small>\n          <button class="btn btn-primary btn-sm" click.delegate="alertAssignee(model.assignee)"\n                  data-test="assignee-btn">\n            Click Me\n          </button>\n        </small>\n      </h4>\n    </div>\n\n    <div class="col-sm-4">\n      <button class="btn btn-primary btn-danger btn-sm" click.delegate="deleteRow(model)" data-test="delete-btn">\n        Delete Row\n      </button>\n      <button class="btn btn-outline-secondary btn-sm" click.delegate="callParentMethod(model)" data-test="parent-btn">\n        Call Parent Method\n      </button>\n    </div>\n  </div>\n</template>\n'},"examples/slickgrid/example19-preload.html":function(e,t){e.exports='<template>\r\n  <div class="container" style="margin-top: 10px">\r\n    <h4>\r\n      <i class="fa fa-refresh fa-spin fa-2x fa-fw"></i>\r\n      Loading...\r\n    </h4>\r\n  </div>\r\n</template>\r\n'},"examples/slickgrid/example19.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle" innerhtml.bind="subTitle"></div>\n\n  <div class="col-sm-6">\n    <button class="btn btn-outline-secondary btn-sm" click.delegate="closeAllRowDetail()" data-test="close-all-btn">\n      Close all Row Details\n    </button>\n    &nbsp;&nbsp;\n\n    <label for="">Detail View Rows Shown: </label>\n    <input type="number" value.bind="detailViewRowCount">\n    <button class="btn btn-outline-secondary btn-xs" click.delegate="changeDetailViewRowCount()"\n            data-test="set-count-btn">\n      Set\n    </button>\n  </div>\n  <div class="alert alert-${flashAlertType} col-sm-6" if.bind="message" data-test="flash-msg">${message}</div>\n\n  <hr />\n\n  <aurelia-slickgrid grid-id="grid19" column-definitions.bind="columnDefinitions" grid-options.bind="gridOptions"\n                     dataset.bind="dataset" asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\n  </aurelia-slickgrid>\n</template>\n'},"examples/slickgrid/example2":function(e,t,i){"use strict";i.r(t),i.d(t,"Example2",(function(){return o}));var n=i("aurelia-slickgrid"),r=function(e,t,i,n,r){return i?'<i class="fa fa-fire red" aria-hidden="true"></i>':{text:'<i class="fa fa-snowflake-o" aria-hidden="true"></i>',addClasses:"lightblue",toolTip:"Freezing"}},a=function(e,t,i,n,r,a){return'<span style="margin-left: 5px">\n      <button class="btn btn-xs btn-default">\n        <i class="fa '+(i?"fa-check-circle":"fa-circle-thin")+' fa-lg" style="color: '+(i?"black":"lavender")+'"></i>\n      </button>\n    </span>'},o=function(){function e(){this.title="Example 2: Grid with Formatters",this.subTitle='\n    Grid with Custom and/or included Slickgrid Formatters (<a href="https://github.com/ghiscoding/aurelia-slickgrid/wiki/Formatters" target="_blank">Wiki docs</a>).\n    <ul>\n      <li>The 2 last columns are using Custom Formatters</li>\n      <ul><li>The "Completed" column uses a the "onCellClick" event and a formatter to simulate a toggle action</li></ul>\n      <li>\n        Support Excel Copy Buffer (SlickGrid Copy Manager Plugin), you can use it by simply enabling "enableExcelCopyBuffer" flag.\n        Note that it will only evaluate Formatter when the "exportWithFormatter" flag is enabled (through "ExportOptions" or the column definition)\n      </li>\n      <li>This example also has auto-resize enabled, and we also demo how you can pause the resizer if you wish to</li>\n    </ul>\n  ',this.resizerPaused=!1,this.defineGrid()}return e.prototype.aureliaGridReady=function(e){this.aureliaGrid=e},e.prototype.attached=function(){this.getData()},e.prototype.defineGrid=function(){var e=this;this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,type:n.FieldType.string,width:70},{id:"phone",name:"Phone Number using mask",field:"phone",sortable:!0,type:n.FieldType.number,minWidth:100,formatter:n.Formatters.mask,params:{mask:"(000) 000-0000"}},{id:"duration",name:"Duration (days)",field:"duration",formatter:n.Formatters.decimal,params:{minDecimal:1,maxDecimal:2},sortable:!0,type:n.FieldType.number,minWidth:90,exportWithFormatter:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:n.Formatters.percentCompleteBar,type:n.FieldType.number,sortable:!0,minWidth:100},{id:"percent2",name:"% Complete",field:"percentComplete2",formatter:n.Formatters.progressBar,type:n.FieldType.number,sortable:!0,minWidth:100},{id:"start",name:"Start",field:"start",formatter:n.Formatters.dateIso,sortable:!0,type:n.FieldType.date,minWidth:90,exportWithFormatter:!0},{id:"finish",name:"Finish",field:"finish",formatter:n.Formatters.dateIso,sortable:!0,type:n.FieldType.date,minWidth:90,exportWithFormatter:!0},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:r,type:n.FieldType.number,sortable:!0,minWidth:100},{id:"completed",name:"Completed",field:"completed",type:n.FieldType.number,sortable:!0,minWidth:100,formatter:a,onCellClick:function(t,i){e.toggleCompletedProperty(i&&i.dataContext)}}],this.gridOptions={autoResize:{containerId:"demo-container",sidePadding:10},enableCellNavigation:!0,showCustomFooter:!0,customFooterOptions:{leftFooterText:"custom footer text",hideTotalItemCount:!0,hideLastUpdateTimestamp:!0},enableExcelCopyBuffer:!0,excelCopyBufferOptions:{onCopyCells:function(e,t){return console.log("onCopyCells",t.ranges)},onPasteCells:function(e,t){return console.log("onPasteCells",t.ranges)},onCopyCancelled:function(e,t){return console.log("onCopyCancelled",t.ranges)}}}},e.prototype.getData=function(){this.dataset=[];for(var e=0;e<500;e++){var t=2e3+Math.floor(10*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),r=Math.round(100*Math.random());this.dataset[e]={id:e,title:"Task "+e,phone:this.generatePhoneNumber(),duration:e%33==0?null:100*Math.random()+"",percentComplete:r,percentComplete2:r,percentCompleteNumber:r,start:new Date(t,i,n),finish:new Date(t,i+1,n),effortDriven:e%5==0}}},e.prototype.generatePhoneNumber=function(){for(var e="",t=0;t<10;t++)e+=Math.round(9*Math.random())+"";return e},e.prototype.togglePauseResizer=function(){this.resizerPaused=!this.resizerPaused,this.aureliaGrid.resizerService.pauseResizer(this.resizerPaused)},e.prototype.toggleCompletedProperty=function(e){var t=this;"object"==typeof e&&(e.completed=!e.completed,setTimeout((function(){t.aureliaGrid.gridService.updateItemById(e.id,e,{highlightRow:!1})}),250))},e}()},"examples/slickgrid/example2.html":function(e,t){e.exports='<template>\n  <h2>${title}</h2>\n  <div class="subtitle"\n       innerhtml.bind="subTitle"></div>\n\n  <button class="btn btn-outline-secondary btn-sm"\n          click.delegate="togglePauseResizer()">\n    Pause auto-resize: <b>${resizerPaused}</b>\n  </button>\n\n  <aurelia-slickgrid grid-id="grid2"\n                     column-definitions.bind="columnDefinitions"\n                     grid-options.bind="gridOptions"\n                     dataset.bind="dataset"\n                     asg-on-aurelia-grid-created.delegate="aureliaGridReady($event.detail)">\n  </aurelia-slickgrid>\n</template>\n'},s66f:function(e,t,i){var n=i("3z3R");"string"==typeof n&&(n=[[e.i,n,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};i("aET+")(n,r);n.locals&&(e.exports=n.locals)}}]);
//# sourceMappingURL=app~65236b8b.aec6a0d6724a3e231ab8.bundle.map