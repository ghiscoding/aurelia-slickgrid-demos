"use strict";(self.webpackChunkaurelia_slickgrid_locale_demo_bs5=self.webpackChunkaurelia_slickgrid_locale_demo_bs5||[]).push([[695],{8070:(e,t,i)=>{i.d(t,{A:()=>s});var a=i(1601),n=i.n(a),l=i(6314),r=i.n(l)()(n());r.push([e.id,"#grid21 .slick-header-column:last-child .slick-header-menu-button,#grid21 .slick-header-column:last-child .slick-resizable-handle,#grid21 .slick-header-column:last-child .slick-sort-indicator,#grid21 .slick-header-column:last-child .slick-sort-indicator-numbered{margin-right:18px}",""]);const s=r},9695:(e,t,i)=>{i.r(t),i.d(t,{Example21:()=>T});var a={};i.r(a),i.d(a,{bindables:()=>c,default:()=>o,dependencies:()=>d,name:()=>r,register:()=>u,template:()=>s});var n=i(3680),l=i(8070);const r="example21",s='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example21.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle"\n      innerhtml.bind="subTitle"></div>\n\n<div class="row row-cols-lg-auto g-1 align-items-center">\n  <div class="col">\n    <label for="columnSelect">Single Search:</label>\n  </div>\n  <div class="col">\n    <select class="form-select" class="form-select" data-test="search-column-list" name="selectedColumn"\n            value.bind="selectedColumn" id="columnSelect">\n      <option repeat.for="column of columnDefinitions"\n              model.bind="column">\n        ${column.name}\n      </option>\n    </select>\n  </div>\n  <div class="col">\n    <select value.bind="selectedOperator"\n            class="form-select"\n            data-test="search-operator-list">\n      <option repeat.for="operator of operatorList"\n              model.bind="operator">\n        ${operator}\n      </option>\n    </select>\n  </div>\n\n  <div class="col">\n    <div class="input-group">\n      <input type="text"\n              class="form-control"\n              placeholder="search value"\n              data-test="search-value-input"\n              value.bind="searchValue" />\n      <button class="btn btn-outline-secondary d-flex align-items-center pl-2 pr-2" data-test="clear-search-value"\n              click.trigger="clearGridSearchInput()">\n        <span class="mdi mdi-close"></span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<hr />\n\n<aurelia-slickgrid grid-id="grid21"\n                    column-definitions.bind="columnDefinitions"\n                    grid-options.bind="gridOptions"\n                    dataset.bind="dataset"\n                    instances.bind="aureliaGrid">\n</aurelia-slickgrid>\n',o=s,d=[],c={};let h;function u(e){h||(h=n.K94.define({name:r,template:s,dependencies:d,bindables:c})),e.register(h)}var m=i(3303),p=i(8211),f=i(5072),g=i.n(f),b=i(7825),v=i.n(b),w=i(7659),y=i.n(w),k=i(5056),O=i.n(k),C=i(540),S=i.n(C),P=i(1113),_=i.n(P),x={};x.styleTagTransform=_(),x.setAttributes=O(),x.insert=y().bind(null,"head"),x.domAPI=v(),x.insertStyleElement=S(),g()(l.A,x),l.A&&l.A.locals&&l.A.locals,i(6757);var D=function(e,t,i,a,n,l){function r(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var s,o=a.kind,d="getter"===o?"get":"setter"===o?"set":"value",c=!t&&e?a.static?e:e.prototype:null,h=t||(c?Object.getOwnPropertyDescriptor(c,a.name):{}),u=!1,m=i.length-1;m>=0;m--){var p={};for(var f in a)p[f]="access"===f?{}:a[f];for(var f in a.access)p.access[f]=a.access[f];p.addInitializer=function(e){if(u)throw new TypeError("Cannot add initializers after decoration has completed");l.push(r(e||null))};var g=(0,i[m])("accessor"===o?{get:h.get,set:h.set}:h[d],p);if("accessor"===o){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(s=r(g.get))&&(h.get=s),(s=r(g.set))&&(h.set=s),(s=r(g.init))&&n.unshift(s)}else(s=r(g))&&("field"===o?n.unshift(s):h[d]=s)}c&&Object.defineProperty(c,a.name,h),u=!0},M=function(e,t,i){for(var a=arguments.length>2,n=0;n<t.length;n++)i=a?t[n].call(e,i):t[n].call(e);return a?i:void 0};let T=(()=>{let e,t,i,l,r,s=[(0,n.EMX)(a)],o=[],d=[],c=[],h=[],u=[],f=[],g=[];return t=class{constructor(){this.selectedColumn=M(this,d,void 0),this.selectedOperator=(M(this,c),M(this,h,void 0)),this.searchValue=(M(this,u),M(this,f,"")),this.title=(M(this,g),"Example 21: Grid AutoHeight"),this.subTitle='\n  The SlickGrid option "autoHeight" can be used if you wish to keep the full height of the grid without any scrolling\n  <ul>\n    <li>You define a fixed grid width via "gridWidth" in the View</li>\n    <li>You can still use the "autoResize" for the width to be resized automatically (the height will never change in this case)</li>\n    <li>This dataset has 25 rows, if you scroll down the page you can see the entire set is shown without any grid scrolling (though you might have browser scrolling)</li>\n  </ul>\n  ',this.columnDefinitions=[],this.dataset=[],this.operatorList=["=","<","<=",">",">=","<>","StartsWith","EndsWith"],this.defineGrid()}attached(){this.getData()}defineGrid(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",width:100,sortable:!0,type:p.PUO.string},{id:"duration",name:"Duration (days)",field:"duration",width:100,sortable:!0,type:p.PUO.number},{id:"complete",name:"% Complete",field:"percentComplete",width:100,sortable:!0,formatter:p._tQ.percentCompleteBar,type:p.PUO.number},{id:"start",name:"Start",field:"start",width:100,sortable:!0,formatter:p._tQ.dateIso,type:p.PUO.date},{id:"finish",name:"Finish",field:"finish",width:100,sortable:!0,formatter:p._tQ.dateIso,type:p.PUO.date},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",width:100,sortable:!0,formatter:p._tQ.checkmarkMaterial,type:p.PUO.number}],this.gridOptions={autoHeight:!0,autoResize:{container:"#demo-container",rightPadding:10},enableFiltering:!0,showHeaderRow:!1,alwaysShowVerticalScroll:!1,enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0}}getData(){const e=[];for(let t=0;t<25;t++){const i=2e3+Math.floor(10*Math.random()),a=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),l=Math.round(100*Math.random());e[t]={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(i,a,n),finish:new Date(i,a+1,n),effortDriven:t%5==0}}this.dataset=e}clearGridSearchInput(){this.searchValue="",this.updateFilter()}selectedOperatorChanged(){this.updateFilter()}selectedColumnChanged(){this.updateFilter()}searchValueChanged(){this.updateFilter()}updateFilter(){this.aureliaGrid?.filterService.updateSingleFilter({columnId:`${this.selectedColumn.id||""}`,operator:this.selectedOperator,searchTerms:[this.searchValue||""]})}},b=t,"symbol"==typeof(v="Example21")&&(v=v.description?"[".concat(v.description,"]"):""),Object.defineProperty(b,"name",{configurable:!0,value:w?"".concat(w," ",v):v}),(()=>{const a="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;i=[(0,m._tP)()],l=[(0,m._tP)()],r=[(0,m._tP)()],D(null,null,i,{kind:"field",name:"selectedColumn",static:!1,private:!1,access:{has:e=>"selectedColumn"in e,get:e=>e.selectedColumn,set:(e,t)=>{e.selectedColumn=t}},metadata:a},d,c),D(null,null,l,{kind:"field",name:"selectedOperator",static:!1,private:!1,access:{has:e=>"selectedOperator"in e,get:e=>e.selectedOperator,set:(e,t)=>{e.selectedOperator=t}},metadata:a},h,u),D(null,null,r,{kind:"field",name:"searchValue",static:!1,private:!1,access:{has:e=>"searchValue"in e,get:e=>e.searchValue,set:(e,t)=>{e.searchValue=t}},metadata:a},f,g),D(null,e={value:t},s,{kind:"class",name:t.name,metadata:a},null,o),t=e.value,a&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:a}),M(t,o)})(),t;var b,v,w})()}}]);