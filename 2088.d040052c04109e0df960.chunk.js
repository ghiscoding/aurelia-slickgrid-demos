"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[2088],{2088:(e,t,i)=>{i.r(t),i.d(t,{Example10:()=>W});var n={};i.r(n),i.d(n,{bindables:()=>d,default:()=>o,dependencies:()=>s,name:()=>l,register:()=>g,template:()=>r});var a=i(5394);i(8088);const l="example10",r='<h2>\n  ${title}\n  <span class="float-end">\n    <a\n      style="font-size: 18px"\n      target="_blank"\n      href="https://github.com/ghiscoding/slickgrid-universal/blob/master/demos/aurelia/src/examples/slickgrid/example10.ts"\n    >\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n  <button\n    class="ms-2 btn btn-outline-secondary btn-sm btn-icon"\n    type="button"\n    data-test="toggle-subtitle"\n    click.trigger="hideSubTitle = !hideSubTitle"\n  >\n    <span class="mdi mdi-information-outline" title="Toggle example sub-title details"></span>\n  </button>\n</h2>\n\n<div class="subtitle" innerhtml.bind="subTitle" hidden.bind="hideSubTitle"></div>\n\n<div class="row">\n  <div class="col-sm-4" style="max-width: 205px">\n    Pagination\n    <div class="btn-group" role="group">\n      <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-first-page" click.trigger="goToGrid1FirstPage()">\n        <i class="mdi mdi-page-first"></i>\n      </button>\n      <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-last-page" click.trigger="goToGrid1LastPage()">\n        <i class="mdi mdi-page-last icon"></i>\n      </button>\n    </div>\n  </div>\n  <div class="col-sm-8">\n    <div class="alert alert-success">\n      <strong>(single select) Selected Row:</strong>\n      <span innerhtml.bind="selectedTitle" data-test="grid1-selections"></span>\n    </div>\n  </div>\n</div>\n\n<div class="overflow-hidden">\n  <aurelia-slickgrid\n    grid-id="grid1"\n    columns.bind="columnDefinitions1"\n    options.bind="gridOptions1"\n    dataset.bind="dataset1"\n    on-aurelia-grid-created.trigger="aureliaGrid1Ready($event.detail)"\n    on-grid-state-changed.trigger="grid1StateChanged($event.detail)"\n    on-selected-rows-changed.trigger="onGrid1SelectedRowsChanged($event.detail.eventData, $event.detail.args)"\n  >\n  </aurelia-slickgrid>\n</div>\n\n<hr class="col-md-6 offset-md-1" />\n\n<div class="row">\n  <div class="col-sm-4 col-md-3" style="max-width: 215px">\n    <label for="enableGrid2Pagination">\n      Pagination:\n      <input type="checkbox" id="enableGrid2Pagination" checked.bind="isGrid2WithPagination" data-test="toggle-pagination-grid2" />\n    </label>\n    <span style="margin-left: 5px" if.bind="isGrid2WithPagination">\n      <div class="btn-group" role="group">\n        <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-first-page" click.trigger="goToGrid2FirstPage()">\n          <i class="mdi mdi-page-first"></i>\n        </button>\n        <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-last-page" click.trigger="goToGrid2LastPage()">\n          <i class="mdi mdi-page-last icon"></i>\n        </button>\n      </div>\n    </span>\n  </div>\n  <div class="col-sm-8">\n    <div class="alert alert-success">\n      <strong>(multi-select) Selected Row(s):</strong>\n      <span innerhtml.bind="selectedTitles" data-test="grid2-selections"></span>\n    </div>\n  </div>\n</div>\n\n<div class="overflow-hidden">\n  <aurelia-slickgrid\n    grid-id="grid2"\n    columns.bind="columnDefinitions2"\n    options.bind="gridOptions2"\n    dataset.bind="dataset2"\n    on-aurelia-grid-created.trigger="aureliaGrid2Ready($event.detail)"\n    on-grid-state-changed.trigger="grid2StateChanged($event.detail)"\n  >\n  </aurelia-slickgrid>\n</div>\n',o=r,s=[],d={};let c;function g(e){c||(c=a.K9.define({name:l,template:r,dependencies:s,bindables:d})),e.register(c)}var u=i(5941),p=i(5072),h=i.n(p),b=i(7825),m=i.n(b),f=i(7659),v=i.n(f),y=i(5056),S=i.n(y),w=i(540),k=i.n(w),G=i(1113),x=i.n(G),T=i(7394),P={};P.styleTagTransform=x(),P.setAttributes=S(),P.insert=v().bind(null,"head"),P.domAPI=m(),P.insertStyleElement=k(),h()(T.A,P),T.A&&T.A.locals&&T.A.locals,i(6757);var C=function(e,t,i,n,a,l){function r(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var o,s=n.kind,d="getter"===s?"get":"setter"===s?"set":"value",c=!t&&e?n.static?e:e.prototype:null,g=t||(c?Object.getOwnPropertyDescriptor(c,n.name):{}),u=!1,p=i.length-1;p>=0;p--){var h={};for(var b in n)h[b]="access"===b?{}:n[b];for(var b in n.access)h.access[b]=n.access[b];h.addInitializer=function(e){if(u)throw new TypeError("Cannot add initializers after decoration has completed");l.push(r(e||null))};var m=(0,i[p])("accessor"===s?{get:g.get,set:g.set}:g[d],h);if("accessor"===s){if(void 0===m)continue;if(null===m||"object"!=typeof m)throw new TypeError("Object expected");(o=r(m.get))&&(g.get=o),(o=r(m.set))&&(g.set=o),(o=r(m.init))&&a.unshift(o)}else(o=r(m))&&("field"===s?a.unshift(o):g[d]=o)}c&&Object.defineProperty(c,n.name,g),u=!0},D=function(e,t,i){for(var n=arguments.length>2,a=0;a<t.length;a++)i=n?t[a].call(e,i):t[a].call(e);return n?i:void 0};let W=(()=>{let e,t,i,l=[(0,a.EM)(n)],r=[],o=[],s=[];return t=class{constructor(){this.title="Example 10: Multiple Grids with Row Selection",this.subTitle='\n    Row selection, single or multi-select (<a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/row-selection" target="_blank">Wiki docs</a>).\n    <ul>\n      <li>Single Select, you can click on any cell to make the row active</li>\n      <li>Multiple Selections, you need to specifically click on the checkbox to make 1 or more selections</li>\n      <li>NOTE: Any Row Selection(s) will be reset when using Pagination and changing Page (you will need to set it back manually if you want it back)</li>\n    </ul>\n  ',this.isGrid2WithPagination=D(this,o,!0),this.aureliaGrid1=D(this,s),this.columnDefinitions1=[],this.columnDefinitions2=[],this.dataset1=[],this.dataset2=[],this.hideSubTitle=!1,this.selectedTitles="",this.selectedTitle="",this.selectedGrid2IDs=[],this.defineGrids()}attached(){this.dataset1=this.prepareData(495),this.dataset2=this.prepareData(525)}aureliaGrid1Ready(e){this.aureliaGrid1=e}aureliaGrid2Ready(e){this.aureliaGrid2=e}defineGrids(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:"number",filterable:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:u._tQ.percentCompleteBar,type:"number",filterable:!0,sortable:!0},{id:"start",name:"Start",field:"start",formatter:u._tQ.dateIso,exportWithFormatter:!0,type:"date",filterable:!0,sortable:!0,filter:{model:u.CuW.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:u._tQ.dateIso,exportWithFormatter:!0,type:"date",filterable:!0,sortable:!0,filter:{model:u.CuW.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:u._tQ.checkmarkMaterial,type:"boolean",sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:u.CuW.singleSelect}}],this.columnDefinitions2=[{id:"title",name:"Title",field:"title",sortable:!0,filterable:!0},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:"number",filterable:!0},{id:"complete",name:"% Complete",field:"percentComplete",formatter:u._tQ.percentCompleteBar,type:"number",filterable:!0,sortable:!0},{id:"start",name:"Start",field:"start",formatter:u._tQ.dateIso,exportWithFormatter:!0,type:"date",filterable:!0,sortable:!0,filter:{model:u.CuW.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:u._tQ.dateIso,exportWithFormatter:!0,type:"date",filterable:!0,sortable:!0,filter:{model:u.CuW.compoundDate}},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:u._tQ.checkmarkMaterial,type:"boolean",sortable:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"true"},{value:!1,label:"false"}],model:u.CuW.singleSelect}}],this.gridOptions1={enableAutoResize:!1,enableCellNavigation:!0,enableRowSelection:!0,enableCheckboxSelector:!0,enableFiltering:!0,checkboxSelector:{hideSelectAllCheckbox:!0},multiSelect:!1,rowSelectionOptions:{selectActiveRow:!0},columnPicker:{hideForceFitButton:!0},gridMenu:{hideForceFitButton:!0},gridHeight:225,gridWidth:800,enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,50,75,100],pageSize:5},presets:{pagination:{pageNumber:2,pageSize:5}}},this.gridOptions2={enableAutoResize:!1,enableCellNavigation:!0,enableFiltering:!0,checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0,applySelectOnAllPages:!0},rowSelectionOptions:{selectActiveRow:!1},enableCheckboxSelector:!0,enableRowSelection:!0,gridHeight:255,gridWidth:800,enablePagination:!0,pagination:{pageSizes:[5,10,15,20,25,50,75,100],pageSize:5},presets:{rowSelection:{dataContextIds:[3,12,13,522]}}}}prepareData(e){const t=[];for(let i=0;i<e;i++){const e=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),a=Math.floor(29*Math.random()),l=Math.round(100*Math.random());t[i]={id:i,title:"Task "+i,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(e,n,a),finish:new Date(e,n+1,a),effortDriven:i%5==0}}return t}goToGrid1FirstPage(){this.aureliaGrid1.paginationService.goToFirstPage()}goToGrid1LastPage(){this.aureliaGrid1.paginationService.goToLastPage()}goToGrid2FirstPage(){this.aureliaGrid2.paginationService.goToFirstPage()}goToGrid2LastPage(){this.aureliaGrid2.paginationService.goToLastPage()}grid1StateChanged(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change)}grid2StateChanged(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change),e.gridState.rowSelection&&(this.selectedGrid2IDs=e.gridState.rowSelection.filteredDataContextIds||[],this.selectedGrid2IDs=this.selectedGrid2IDs.sort(((e,t)=>e-t)),this.selectedTitles=this.selectedGrid2IDs.map((e=>`Task ${e}`)).join(","),this.selectedTitles.length>293&&(this.selectedTitles=this.selectedTitles.substring(0,293)+"..."))}isGrid2WithPaginationChanged(){this.aureliaGrid2.paginationService.togglePaginationVisibility(this.isGrid2WithPagination)}onGrid1SelectedRowsChanged(e,t){const i=t&&t.grid;Array.isArray(t.rows)&&(this.selectedTitle=t.rows.map((e=>{const t=i.getDataItem(e);return t&&t.title||""})))}},d=t,"symbol"==typeof(c="Example10")&&(c=c.description?"[".concat(c.description,"]"):""),Object.defineProperty(d,"name",{configurable:!0,value:g?"".concat(g," ",c):c}),(()=>{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;i=[(0,a._t)()],C(null,null,i,{kind:"field",name:"isGrid2WithPagination",static:!1,private:!1,access:{has:e=>"isGrid2WithPagination"in e,get:e=>e.isGrid2WithPagination,set:(e,t)=>{e.isGrid2WithPagination=t}},metadata:n},o,s),C(null,e={value:t},l,{kind:"class",name:t.name,metadata:n},null,r),t=e.value,n&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),D(t,r)})(),t;var d,c,g})()},7394:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(1601),a=i.n(n),l=i(6314),r=i.n(l)()(a());r.push([e.id,".alert{padding:8px;margin-bottom:10px}.col-sm-1{max-width:70px}",""]);const o=r},8088:(e,t,i)=>{var n=i(1601),a=i.n(n),l=i(6314);i.n(l)()(a()).push([e.id,".alert{padding:8px;margin-bottom:10px}.col-sm-1{max-width:70px}",""])}}]);