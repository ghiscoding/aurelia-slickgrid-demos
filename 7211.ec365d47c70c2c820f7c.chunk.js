"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[7211],{6113:(t,e,i)=>{i.d(e,{A:()=>l});var n=i(1601),a=i.n(n),o=i(6314),r=i.n(o)()(a());r.push([t.id,".duration-bg{background-color:#e9d4f1 !important}",""]);const l=r},6775:(t,e,i)=>{var n=i(1601),a=i.n(n),o=i(6314);i.n(o)()(a()).push([t.id,".duration-bg{background-color:#e9d4f1 !important}",""])},7211:(t,e,i)=>{i.r(e),i.d(e,{Example11:()=>G});var n={};i.r(n),i.d(n,{bindables:()=>s,default:()=>l,dependencies:()=>d,name:()=>o,register:()=>h,template:()=>r});var a=i(5394);i(6775);const o="example11",r='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example11.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle" innerhtml.bind="subTitle"></div>\n\n<div class="col-sm-12">\n  <span>\n    <label>Scroll: </label>\n    <div class="btn-group" role="group" aria-label="...">\n      <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="scroll-top-btn" click.trigger="scrollGridTop()">\n        <i class="mdi mdi-arrow-down mdi-rotate-180 icon"></i>\n      </button>\n      <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="scroll-bottom-btn"\n              click.trigger="scrollGridBottom()">\n        <i class="mdi mdi-arrow-down icon"></i>\n      </button>\n    </div>\n    <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="add-new-item-top-btn"\n            click.trigger="addNewItem()">Add New Mocked Item (top)</button>\n    <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="add-new-item-bottom-btn"\n            click.trigger="addNewItem(\'bottom\')">Add New Mocked Item\n      (bottom)</button>\n    <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="update-second-item-btn"\n            click.trigger="updateSecondItem()">\n      Update 2nd Row Item with Random Duration\n    </button>\n    <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="highlight-row5-btn"\n            click.trigger="highlighFifthRow()">Highlight 5th Row</button>\n    <button class="btn btn-sm btn-outline-secondary btn-icon" data-test="highlight-duration40-btn"\n            click.trigger="changeDurationBackgroundColor()">\n      Highlight Rows with Duration over 50\n    </button>\n  </span>\n  <hr />\n</div>\n\n<aurelia-slickgrid grid-id="grid11"\n                    column-definitions.bind="columnDefinitions"\n                    grid-options.bind="gridOptions"\n                    dataset.bind="dataset"\n                    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)">\n</aurelia-slickgrid>\n',l=r,d=[],s={};let c;function h(t){c||(c=a.K9.define({name:o,template:r,dependencies:d,bindables:s})),t.register(c)}var u=i(6670),m=i(5072),g=i.n(m),b=i(7825),p=i.n(b),f=i(7659),k=i.n(f),w=i(5056),v=i.n(w),y=i(540),M=i.n(y),C=i(1113),I=i.n(C),D=i(6113),S={};S.styleTagTransform=I(),S.setAttributes=v(),S.insert=k().bind(null,"head"),S.domAPI=p(),S.insertStyleElement=M(),g()(D.A,S),D.A&&D.A.locals&&D.A.locals,i(6757);let G=(()=>{let t,e,i=[(0,a.EM)(n)],o=[];return e=class{constructor(){this.title="Example 11: Add / Update / Highlight a Datagrid Item",this.subTitle='\n  Add / Update / Hightlight an Item from the Datagrid (<a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/add-update-highlight" target="_blank">Wiki docs</a>).\n  <ul>\n    <li><b>Note:</b> this demo is <b>only</b> on the datagrid (client) side, you still need to deal with the backend yourself</li>\n    <li>Adding an item, will always be showing as the 1st item in the grid because that is the best visual place to add it</li>\n    <li>Add/Update an item requires a valid Slickgrid Selection Model, you have 2 choices to deal with this:</li>\n    <ul><li>You can enable "enableCheckboxSelector" or "enableRowSelection" to True</li></ul>\n    <li>Click on any of the buttons below to test this out</li>\n    <li>You can change the highlighted color &amp; animation by changing the <a href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/aurelia-slickgrid/src/aurelia-slickgrid/styles/_variables.scss" target="_blank">SASS Variables</a></li>\n    <ul>\n      <li>"$row-highlight-background-color" or "$row-highlight-fade-animation"</li>\n    </ul>\n    <li>You can also add CSS class(es) on the fly (or on page load) on rows with certain criteria, (e.g. click on last button)<li>\n    <ul>\n      <li>Example, click on button "Highlight Rows with Duration over 50" to see row styling changing. <a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/dynamic-item-metadata" target="_blank">Wiki doc</a></li>\n    </ul>\n  </ul>\n  ',this.columnDefinitions=[],this.dataset=[],this.defineGrid(),this.mockData(1e3)}aureliaGridReady(t){this.aureliaGrid=t,this.dataView=t.dataView,this.grid=t.slickGrid,this.gridService=t.gridService}defineGrid(){this.columnDefinitions=[{id:"delete",field:"id",excludeFromHeaderMenu:!0,formatter:u._tQ.icon,params:{iconCssClass:"mdi mdi-trash-can pointer"},minWidth:30,maxWidth:30,onCellClick:(t,e)=>{console.log(e),confirm("Are you sure?")&&this.aureliaGrid.gridService.deleteItemById(e.dataContext.id)}},{id:"title",name:"Title",field:"title",sortable:!0,type:u.PUO.string,editor:{model:u.R8o.longText}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:u.PUO.number,editor:{model:u.R8o.text},onCellChange:(t,e)=>{alert("onCellChange directly attached to the column definition"),console.log(e)}},{id:"complete",name:"% Complete",field:"percentComplete",formatter:u._tQ.percentCompleteBar,type:u.PUO.number,editor:{model:u.R8o.integer}},{id:"start",name:"Start",field:"start",formatter:u._tQ.dateIso,sortable:!0,type:u.PUO.date},{id:"finish",name:"Finish",field:"finish",formatter:u._tQ.dateIso,sortable:!0,type:u.PUO.date},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",formatter:u._tQ.checkmarkMaterial,type:u.PUO.number,editor:{model:u.R8o.checkbox}}],this.gridOptions={asyncEditorLoading:!1,autoResize:{container:"#demo-container",rightPadding:10},editable:!0,enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0}}mockData(t){const e=[];for(let i=0;i<t;i++){const t=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),a=Math.floor(29*Math.random()),o=Math.round(100*Math.random());e[i]={id:i,title:"Task "+i,duration:Math.round(100*Math.random())+"",percentComplete:o,percentCompleteNumber:o,start:new Date(t,n,a),finish:new Date(t,n+1,a),effortDriven:i%5==0}}this.dataset=e}addNewItem(t){const e=this.createNewItem(1);this.aureliaGrid.gridService.addItem(e,{position:t})}createNewItem(t=1){const e=this.aureliaGrid.dataView.getItems();let i=0;e.forEach((t=>{t.id>i&&(i=t.id)}));const n=i+t,a=2e3+Math.floor(10*Math.random()),o=Math.floor(11*Math.random()),r=Math.floor(29*Math.random()),l=Math.round(100*Math.random());return{id:n,title:"Task "+n,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(a,o,r),finish:new Date(a,o+2,r),effortDriven:!0}}changeDurationBackgroundColor(){this.dataView.getItemMetadata=this.updateItemMetadataForDurationOver40(this.dataView.getItemMetadata),this.grid.invalidate(),this.grid.render()}highlighFifthRow(){this.scrollGridTop(),this.aureliaGrid.gridService.highlightRow(4,1500)}updateItemMetadataForDurationOver40(t){return e=>{const i=this.dataView.getItem(e);let n={cssClasses:""};return"object"==typeof t&&(n=t(e)),n&&i&&i.duration&&+i.duration>40&&(n.cssClasses=(n.cssClasses||"")+" duration-bg"),n}}updateSecondItem(){this.scrollGridTop();const t=this.aureliaGrid.gridService.getDataItemByRowNumber(1);t.duration=Math.round(100*Math.random()),this.aureliaGrid.gridService.updateItem(t)}scrollGridBottom(){this.aureliaGrid.slickGrid.navigateBottom()}scrollGridTop(){this.aureliaGrid.slickGrid.navigateTop()}},r=e,"symbol"==typeof(l="Example11")&&(l=l.description?"[".concat(l.description,"]"):""),Object.defineProperty(r,"name",{configurable:!0,value:d?"".concat(d," ",l):l}),(()=>{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(function(t,e,i,n,a,o){function r(t){if(void 0!==t&&"function"!=typeof t)throw new TypeError("Function expected");return t}for(var l,d=n.kind,s="getter"===d?"get":"setter"===d?"set":"value",c=!e&&t?n.static?t:t.prototype:null,h=e||(c?Object.getOwnPropertyDescriptor(c,n.name):{}),u=!1,m=i.length-1;m>=0;m--){var g={};for(var b in n)g[b]="access"===b?{}:n[b];for(var b in n.access)g.access[b]=n.access[b];g.addInitializer=function(t){if(u)throw new TypeError("Cannot add initializers after decoration has completed");o.push(r(t||null))};var p=(0,i[m])("accessor"===d?{get:h.get,set:h.set}:h[s],g);if("accessor"===d){if(void 0===p)continue;if(null===p||"object"!=typeof p)throw new TypeError("Object expected");(l=r(p.get))&&(h.get=l),(l=r(p.set))&&(h.set=l),(l=r(p.init))&&a.unshift(l)}else(l=r(p))&&("field"===d?a.unshift(l):h[s]=l)}c&&Object.defineProperty(c,n.name,h),u=!0})(null,t={value:e},i,{kind:"class",name:e.name,metadata:n},null,o),e=t.value,n&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),function(t,e,i){for(var n=arguments.length>2,a=0;a<e.length;a++)i=n?e[a].call(t,i):e[a].call(t)}(e,o)})(),e;var r,l,d})()}}]);