"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[5829],{5829:(e,t,i)=>{i.r(t),i.d(t,{Example12:()=>x});var n={};i.r(n),i.d(n,{bindables:()=>c,default:()=>r,dependencies:()=>s,name:()=>l,register:()=>u,template:()=>o});var a=i(5394);const l="example12",o='<h2>\n  ${title}\n  <span class="float-end">\n    <a\n      style="font-size: 18px"\n      target="_blank"\n      href="https://github.com/ghiscoding/slickgrid-universal/blob/master/demos/aurelia/src/examples/slickgrid/example12.ts"\n    >\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n  <button class="ms-2 btn btn-outline-secondary btn-sm btn-icon" type="button" data-test="toggle-subtitle" click.trigger="toggleSubTitle()">\n    <span class="mdi mdi-information-outline" title="Toggle example sub-title details"></span>\n  </button>\n</h2>\n\n<div class="subtitle" innerhtml.bind="subTitle"></div>\n\n<hr />\n\n<div class="row">\n  <div class="col-sm-12">\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="language-button" click.trigger="switchLanguage()">\n      <i class="mdi mdi-translate"></i>\n      Switch Language\n    </button>\n    <label>Locale:</label>\n    <span style="font-style: italic; width: 70px" data-test="selected-locale"> ${selectedLanguage + \'.json\'} </span>\n\n    <span style="margin-left: 20px">\n      <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="exportToFile(\'csv\')">\n        <i class="mdi mdi-download"></i>\n        Download to CSV\n      </button>\n      <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="exportToFile(\'txt\')">\n        <i class="mdi mdi-download"></i>\n        Download to Text\n      </button>\n      <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="exportToExcel()">\n        <i class="mdi mdi-file-excel-outline text-success"></i>\n        Download to Excel\n      </button>\n    </span>\n    <span style="margin-left: 10px">\n      <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="dynamicallyAddTitleHeader()">\n        <i class="mdi mdi-shape-square-plus"></i>\n        Dynamically Duplicate Title Column\n      </button>\n    </span>\n  </div>\n</div>\n\n<aurelia-slickgrid\n  grid-id="grid12"\n  columns.bind="columnDefinitions"\n  options.bind="gridOptions"\n  dataset.bind="dataset"\n  on-grid-state-changed.trigger="gridStateChanged($event.detail)"\n  on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)"\n>\n</aurelia-slickgrid>\n',r=o,s=[],c={};let d;function u(e){d||(d=a.K9.define({name:l,template:o,dependencies:s,bindables:c})),e.register(d)}var m=i(6407),p=i(2484),h=i(9521),b=i(5941),g=i(7557),f=(i(6757),function(e,t,i,n,a,l){function o(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var r,s=n.kind,c="getter"===s?"get":"setter"===s?"set":"value",d=!t&&e?n.static?e:e.prototype:null,u=t||(d?Object.getOwnPropertyDescriptor(d,n.name):{}),m=!1,p=i.length-1;p>=0;p--){var h={};for(var b in n)h[b]="access"===b?{}:n[b];for(var b in n.access)h.access[b]=n.access[b];h.addInitializer=function(e){if(m)throw new TypeError("Cannot add initializers after decoration has completed");l.push(o(e||null))};var g=(0,i[p])("accessor"===s?{get:u.get,set:u.set}:u[c],h);if("accessor"===s){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(r=o(g.get))&&(u.get=r),(r=o(g.set))&&(u.set=r),(r=o(g.init))&&a.unshift(r)}else(r=o(g))&&("field"===s?a.unshift(r):u[c]=r)}d&&Object.defineProperty(d,n.name,u),m=!0});const y=(e,t,i,n,a,l)=>{const o=l.getOptions().i18n;return o?.tr("TASK_X",{x:i})??""};let x=(()=>{let e,t,i=[(0,a.EM)(n)],l=[];return t=class{constructor(e=(0,g.hd)(h.TH)){this.i18n=e,this.title="Example 12: Localization (i18n)",this.subTitle='Support multiple locales with the i18next plugin, following these steps.\n    Take a look at the (<a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/localization/localization" target="_blank">Wiki documentation</a>)\n    <ol class="small">\n      <li>You first need to "enableTranslate" in the Grid Options</li>\n      <li>In the Column Definitions, you have following options</li>\n      <ul>\n        <li>To translate a header title, use "nameKey" with a translate key (nameKey: \'TITLE\')</li>\n        <li>For the cell values, you need to use a Formatter, there\'s 2 ways of doing it</li>\n        <ul>\n          <li>formatter: myCustomTranslateFormatter <b>&lt;= "Title" column uses it</b></li>\n          <li>formatter: Formatters.translate <b>&lt;= "Completed" column uses it</b></li>\n        </ul>\n      </ul>\n      <li>For date localization, you need to create your own custom formatter. </li>\n      <ul>\n        <li>You can easily implement logic to switch between Formatters "dateIso" or "dateUs", depending on current locale.</li>\n      </ul>\n      <li>For the Select (dropdown) filter, you can fill in the "labelKey" property, if found it will use it, else it will use "label"</li>\n        <ul>\n          <li>What if your select options have totally different value/label pair? In this case, you can use the <b>customStructure: { label: \'customLabel\', value: \'customValue\'}</b> to change the property name(s) to use.\'</li>\n          <li>What if you want to use "customStructure" and translation? Simply pass this flag <b>enableTranslateLabel: true</b></li>\n          <li>More info on the Select Filter <a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/column-functionalities/filters/select-filter" target="_blank">Wiki page</a></li>\n        </ul>\n        <li>For more info about "Download to File", read the <a href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/export-to-excel" target="_blank">Wiki page</a></li>\n      </ol>',this.columnDefinitions=[],this.dataset=[],this.duplicateTitleHeaderCount=1,this.hideSubTitle=!1,this.excelExportService=new m.N,this.textExportService=new p.f,this.defineGrid(),this.i18n.setLocale("en"),this.selectedLanguage="en"}attached(){this.getData(1500)}aureliaGridReady(e){this.aureliaGrid=e,this.gridObj=e.slickGrid}defineGrid(){this.columnDefinitions=[{id:"title",name:"Title",field:"id",nameKey:"TITLE",minWidth:100,formatter:y,sortable:!0,filterable:!0,params:{useFormatterOuputToFilter:!0}},{id:"description",name:"Description",field:"description",filterable:!0,sortable:!0,minWidth:80},{id:"duration",name:"Duration (days)",field:"duration",nameKey:"DURATION",sortable:!0,formatter:b._tQ.percentCompleteBar,minWidth:100,exportWithFormatter:!1,filterable:!0,type:"number",filter:{model:b.CuW.slider,options:{hideSliderNumber:!0}}},{id:"start",name:"Start",field:"start",nameKey:"START",formatter:b._tQ.dateIso,outputType:"dateIso",type:"date",minWidth:100,filterable:!0,filter:{model:b.CuW.compoundDate}},{id:"finish",name:"Finish",field:"finish",nameKey:"FINISH",formatter:b._tQ.dateIso,outputType:"dateIso",type:"date",minWidth:100,filterable:!0,filter:{model:b.CuW.compoundDate}},{id:"completedBool",name:"Completed",field:"completedBool",nameKey:"COMPLETED",minWidth:100,sortable:!0,formatter:b._tQ.checkmarkMaterial,exportCustomFormatter:b._tQ.translateBoolean,filterable:!0,filter:{collection:[{value:"",label:""},{value:!0,labelKey:"TRUE"},{value:!1,labelKey:"FALSE"}],model:b.CuW.singleSelect,enableTranslateLabel:!0}},{id:"completed",name:"Completed",field:"completed",nameKey:"COMPLETED",formatter:b._tQ.translate,sortable:!0,minWidth:100,exportWithFormatter:!0,filterable:!0,filter:{collection:[{value:"",label:""},{value:"TRUE",labelKey:"TRUE"},{value:"FALSE",labelKey:"FALSE"}],collectionSortBy:{property:"labelKey",sortDesc:!0},model:b.CuW.singleSelect,enableTranslateLabel:!0}}],this.gridOptions={autoResize:{container:"#demo-container",rightPadding:10},enableAutoResize:!0,enableExcelCopyBuffer:!0,enableFiltering:!0,enableTranslate:!0,i18n:this.i18n,checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},enableCheckboxSelector:!0,enableRowSelection:!0,showCustomFooter:!0,customFooterOptions:{metricTexts:{itemsKey:"ITEMS",ofKey:"OF",lastUpdateKey:"LAST_UPDATE"},dateFormat:"YYYY-MM-DD hh:mm a",hideTotalItemCount:!1,hideLastUpdateTimestamp:!1},gridMenu:{hideExportCsvCommand:!1,hideExportTextDelimitedCommand:!1},enableExcelExport:!0,enableTextExport:!0,textExportOptions:{exportWithFormatter:!0,sanitizeDataExport:!0},excelExportOptions:{customExcelHeader:(e,t)=>{const i="fr"===this.i18n.getLocale()?"Titre qui est suffisament long pour Ãªtre coupÃ©":"My header that is long enough to wrap",n=e.getStyleSheet().createFormat({font:{size:12,fontName:"Calibri",bold:!0,color:"FF0000FF"},alignment:{wrapText:!0}});t.setRowInstructions(0,{height:30}),t.mergeCells("B1","D1");const a=[];a.push({value:""}),a.push({value:i,metadata:{style:n.id}}),t.data.push(a)},exportWithFormatter:!0,sanitizeDataExport:!0},externalResources:[this.excelExportService,this.textExportService]}}getData(e){const t=[];for(let i=0;i<e;i++){const e=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),a=Math.floor(29*Math.random());t[i]={id:i,description:i%5?"desc "+i:"ðŸš€ðŸ¦„ espaÃ±ol",duration:Math.round(100*Math.random())+"",start:new Date(e,n,a),finish:new Date(e,n+1,a),completedBool:i%5==0,completed:i%5==0?"TRUE":"FALSE"}}this.dataset=t}dynamicallyAddTitleHeader(){const e={id:"title"+this.duplicateTitleHeaderCount++,field:"id",nameKey:"TITLE",formatter:y,sortable:!0,minWidth:100,filterable:!0,params:{useFormatterOuputToFilter:!0}};this.columnDefinitions.push(e),this.columnDefinitions=this.columnDefinitions.slice()}exportToExcel(){this.excelExportService.exportToExcel({filename:"Export",format:"xlsx"})}exportToFile(e="csv"){this.textExportService.exportToFile({delimiter:"csv"===e?b.IQ1.comma:b.IQ1.tab,filename:"myExport",format:"csv"===e?"csv":"txt"})}gridStateChanged(e){console.log("Grid State changed:: ",e),console.log("Grid State changed:: ",e.change)}async switchLanguage(){const e="en"===this.selectedLanguage?"fr":"en";await this.i18n.setLocale(e),this.selectedLanguage=e}toggleSubTitle(){this.hideSubTitle=!this.hideSubTitle;const e=this.hideSubTitle?"add":"remove";document.querySelector(".subtitle")?.classList[e]("hidden"),this.aureliaGrid.resizerService.resizeGrid(0)}},o=t,"symbol"==typeof(r="Example12")&&(r=r.description?"[".concat(r.description,"]"):""),Object.defineProperty(o,"name",{configurable:!0,value:s?"".concat(s," ",r):r}),(()=>{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;f(null,e={value:t},i,{kind:"class",name:t.name,metadata:n},null,l),t=e.value,n&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),function(e,t,i){for(var n=arguments.length>2,a=0;a<t.length;a++)i=n?t[a].call(e,i):t[a].call(e)}(t,l)})(),t;var o,r,s})()}}]);