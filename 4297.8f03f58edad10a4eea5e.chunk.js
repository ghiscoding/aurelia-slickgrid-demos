"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[4297],{4297:(e,t,a)=>{a.r(t),a.d(t,{Example47:()=>f});var n={};a.r(n),a.d(n,{bindables:()=>d,default:()=>l,dependencies:()=>s,name:()=>o,register:()=>u,template:()=>r});var i=a(5394);const o="example47",r='<h2>\n  Example 47: Row Detail View + Grouping\n  <span class="float-end">\n    <a\n      style="font-size: 18px"\n      target="_blank"\n      href="https://github.com/ghiscoding/slickgrid-universal/blob/master/demos/aurelia/src/examples/slickgrid/example47.ts"\n    >\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n  <button class="ms-2 btn btn-outline-secondary btn-sm btn-icon" type="button" data-test="toggle-subtitle" click.trigger="toggleSubTitle()">\n    <span class="mdi mdi-information-outline" title="Toggle example sub-title details"></span>\n  </button>\n  <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="toggleDarkMode()" data-test="toggle-dark-mode">\n    <span class="mdi mdi-theme-light-dark"></span>\n    <span>Toggle Dark Mode</span>\n  </button>\n</h2>\n\n<div class="subtitle">\n  Provide ability for Row Detail to work with Grouping, see (<a\n    href="https://ghiscoding.gitbook.io/aurelia-slickgrid/grid-functionalities/row-detail"\n    target="_blank"\n    >Wiki docs</a\n  >)\n</div>\n\n<div class="row">\n  <div class="col-sm-12 d-flex gap-4px">\n    <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="closeAllRowDetail()" data-test="collapse-all-rowdetail-btn">\n      Close all Row Details\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="clear-grouping-btn" click.trigger="clearGrouping()">\n      <i class="mdi mdi-close"></i> Clear grouping\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="collapse-all-group-btn" click.trigger="collapseAllGroups()">\n      <i class="mdi mdi-arrow-collapse"></i> Collapse all groups\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="expand-all-btn" click.trigger="expandAllGroups()">\n      <i class="mdi mdi-arrow-expand"></i> Expand all groups\n    </button>\n\n    <label for="detailViewRowCount">Detail View Rows Shown: </label>\n    <input id="detailViewRowCount" type="number" value.bind="detailViewRowCount" style="height: 26px; width: 40px" />\n    <button\n      class="btn btn-outline-secondary btn-sm btn-icon"\n      style="height: 26px"\n      click.trigger="changeDetailViewRowCount()"\n      data-test="set-count-btn"\n    >\n      Set\n    </button>\n    <label for="serverdelay" class="ms-2">Server Delay: </label>\n    <input\n      id="serverdelay"\n      value.bind="serverWaitDelay"\n      type="number"\n      data-test="server-delay"\n      style="height: 26px; width: 55px"\n      title="input a fake timer delay to simulate slow server response"\n    />\n  </div>\n\n  <div class="row">\n    <div class="col-sm-12">\n      <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="group-duration-sort-value-btn" click.trigger="groupByDuration()">\n        Group by Duration\n      </button>\n      <button\n        class="btn btn-outline-secondary btn-sm btn-icon"\n        data-test="group-duration-effort-btn"\n        click.trigger="groupByDurationEffortDriven()"\n      >\n        Group by Duration then Effort-Driven\n      </button>\n    </div>\n  </div>\n\n  <hr />\n\n  <aurelia-slickgrid\n    grid-id="grid47"\n    columns.bind="columnDefinitions"\n    options.bind="gridOptions"\n    dataset.bind="dataset"\n    extensions.bind="extensions"\n    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)"\n  >\n  </aurelia-slickgrid>\n</div>\n',l=r,s=[],d={};let c;function u(e){c||(c=i.K9.define({name:o,template:r,dependencies:s,bindables:d})),e.register(c)}var m=a(5895),p=a(1946),b=a(9154),g=(a(6757),function(e,t,a,n,i,o){function r(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var l,s=n.kind,d="getter"===s?"get":"setter"===s?"set":"value",c=!t&&e?n.static?e:e.prototype:null,u=t||(c?Object.getOwnPropertyDescriptor(c,n.name):{}),m=!1,p=a.length-1;p>=0;p--){var b={};for(var g in n)b[g]="access"===g?{}:n[g];for(var g in n.access)b.access[g]=n.access[g];b.addInitializer=function(e){if(m)throw new TypeError("Cannot add initializers after decoration has completed");o.push(r(e||null))};var h=(0,a[p])("accessor"===s?{get:u.get,set:u.set}:u[d],b);if("accessor"===s){if(void 0===h)continue;if(null===h||"object"!=typeof h)throw new TypeError("Object expected");(l=r(h.get))&&(u.get=l),(l=r(h.set))&&(u.set=l),(l=r(h.init))&&i.unshift(l)}else(l=r(h))&&("field"===s?i.unshift(l):u[d]=l)}c&&Object.defineProperty(c,n.name,u),m=!0}),h=function(e,t,a){for(var n=arguments.length>2,i=0;i<t.length;i++)a=n?t[i].call(e,a):t[i].call(e);return n?a:void 0};let f=(()=>{let e,t,a,o,r=[(0,i.EM)(n)],l=[],s=[],d=[],c=[],u=[];return t=class{constructor(){this._darkMode=!1,this.detailViewRowCount=h(this,s,9),this.serverWaitDelay=(h(this,d),h(this,c,250)),this.aureliaGrid=h(this,u),this.columnDefinitions=[],this.dataset=[],this.hideSubTitle=!1,this.message="",this.defineGrid()}get rowDetailInstance(){return this.aureliaGrid?.extensionService.getExtensionInstanceByName(m.$fu.rowDetailView)}attached(){this.getData()}detaching(){document.querySelector(".panel-wm-content").classList.remove("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="light"}aureliaGridReady(e){this.aureliaGrid=e,this.dataviewObj=e.dataView,this.gridObj=e.slickGrid,this.groupByDuration()}defineGrid(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",sortable:!0,width:70,filterable:!0,editor:{model:m.R8o.text}},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,type:"number",minWidth:90,filterable:!0},{id:"%",name:"% Complete",field:"percentComplete",minWidth:200,width:250,resizable:!1,filterable:!0,sortable:!0,type:"number",formatter:m._tQ.percentCompleteBar,groupTotalsFormatter:m.tao.avgTotalsPercentage,params:{groupFormatterPrefix:"<i>Avg</i>: "}},{id:"start",name:"Start",field:"start",formatter:m._tQ.dateIso,sortable:!0,type:"date",minWidth:90,exportWithFormatter:!0,filterable:!0,filter:{model:m.CuW.compoundDate}},{id:"finish",name:"Finish",field:"finish",formatter:m._tQ.dateIso,sortable:!0,type:"date",minWidth:90,exportWithFormatter:!0,filterable:!0,filter:{model:m.CuW.compoundDate}},{id:"cost",name:"Cost",field:"cost",minWidth:70,width:80,sortable:!0,filterable:!0,filter:{model:m.CuW.compoundInputNumber},type:"number",formatter:m._tQ.dollar,groupTotalsFormatter:m.tao.sumTotalsDollarBold},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",minWidth:100,formatter:m._tQ.checkmarkMaterial,type:"boolean",filterable:!0,sortable:!0,filter:{collection:[{value:"",label:""},{value:!0,label:"True"},{value:!1,label:"False"}],model:m.CuW.singleSelect}}],this.gridOptions={autoResize:{container:"#demo-container",rightPadding:10},enableFiltering:!0,enableGrouping:!0,enableRowDetailView:!0,rowTopOffsetRenderType:"top",darkMode:this._darkMode,rowDetailView:{process:e=>this.simulateServerAsyncCall(e),loadOnce:!0,singleRowExpand:!1,panelRows:this.detailViewRowCount,preloadViewModel:p.R,viewModel:b.g,parentRef:this},rowSelectionOptions:{selectActiveRow:!0}}}getData(){const e=[];for(let t=0;t<1200;t++){const a=2e3+Math.floor(10*Math.random()),n=Math.floor(11*Math.random()),i=Math.floor(29*Math.random()),o=Math.round(100*Math.random()),r=Math.round(1e4*Math.random())/100;e[t]={id:t,title:"Task "+t,duration:Math.floor(100*Math.random()),percentComplete:o,start:new Date(a,n,i),finish:new Date(a,n+1,i),cost:t%3?r:-r,effortDriven:t%5==0}}this.dataset=e}changeDetailViewRowCount(){const e=this.rowDetailInstance.getOptions();e&&e.panelRows&&(e.panelRows=this.detailViewRowCount,this.rowDetailInstance.setOptions(e))}closeAllRowDetail(){this.rowDetailInstance.collapseAll()}clearGrouping(){this.dataviewObj.setGrouping([])}collapseAllGroups(){this.dataviewObj.collapseAllGroups()}expandAllGroups(){this.dataviewObj.expandAllGroups()}groupByDuration(){this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0}]),this.dataviewObj.setGrouping({getter:"duration",formatter:e=>`Duration: ${e.value} <span style="color:green">(${e.count} items)</span>`,comparer:(e,t)=>m.Luy.numeric(e.value,t.value,m.Lo1.asc),aggregators:[new m.J2q.Avg("percentComplete"),new m.J2q.Sum("cost")],aggregateCollapsed:!1,lazyTotalsCalculation:!0}),this.gridObj.invalidate()}groupByDurationEffortDriven(){this.aureliaGrid.filterService.setSortColumnIcons([{columnId:"duration",sortAsc:!0},{columnId:"effortDriven",sortAsc:!0}]),this.dataviewObj.setGrouping([{getter:"duration",formatter:e=>`Duration: ${e.value} <span style="color:green">(${e.count} items)</span>`,aggregators:[new m.J2q.Sum("duration"),new m.J2q.Sum("cost")],aggregateCollapsed:!0,lazyTotalsCalculation:!0},{getter:"effortDriven",formatter:e=>`Effort-Driven: ${e.value?"True":"False"} <span style="color:green">(${e.count} items)</span>`,aggregators:[new m.J2q.Avg("percentComplete"),new m.J2q.Sum("cost")],collapsed:!0,lazyTotalsCalculation:!0}]),this.gridObj.invalidate()}simulateServerAsyncCall(e){const t=["John Doe","Jane Doe","Chuck Norris","Bumblebee","Jackie Chan","Elvis Presley","Bob Marley","Mohammed Ali","Bruce Lee","Rocky Balboa"];return new Promise((a=>{setTimeout((()=>{const n=e;n.assignee=t[this.randomNumber(0,9)]||"",n.reporter=t[this.randomNumber(0,9)]||"",a(n)}),this.serverWaitDelay)}))}toggleDarkMode(){this._darkMode=!this._darkMode,this.toggleBodyBackground(),this.aureliaGrid.slickGrid?.setOptions({darkMode:this._darkMode}),this.closeAllRowDetail()}toggleBodyBackground(){this._darkMode?(document.querySelector(".panel-wm-content").classList.add("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="dark"):(document.querySelector(".panel-wm-content").classList.remove("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="light")}toggleSubTitle(){this.hideSubTitle=!this.hideSubTitle;const e=this.hideSubTitle?"add":"remove";document.querySelector(".subtitle")?.classList[e]("hidden"),this.aureliaGrid.resizerService.resizeGrid(0)}randomNumber(e,t){return Math.floor(Math.random()*(t-e+1)+e)}},f=t,"symbol"==typeof(w="Example47")&&(w=w.description?"[".concat(w.description,"]"):""),Object.defineProperty(f,"name",{configurable:!0,value:v?"".concat(v," ",w):w}),(()=>{const n="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[i._t],o=[i._t],g(null,null,a,{kind:"field",name:"detailViewRowCount",static:!1,private:!1,access:{has:e=>"detailViewRowCount"in e,get:e=>e.detailViewRowCount,set:(e,t)=>{e.detailViewRowCount=t}},metadata:n},s,d),g(null,null,o,{kind:"field",name:"serverWaitDelay",static:!1,private:!1,access:{has:e=>"serverWaitDelay"in e,get:e=>e.serverWaitDelay,set:(e,t)=>{e.serverWaitDelay=t}},metadata:n},c,u),g(null,e={value:t},r,{kind:"class",name:t.name,metadata:n},null,l),t=e.value,n&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:n}),h(t,l)})(),t;var f,w,v})()}}]);